{"ast":null,"code":"import React,{Fragment}from'react';import Breadcrumb from'../common/breadcrumb';import{Chart}from\"react-google-charts\";var GoogleChart=function GoogleChart(){return React.createElement(Fragment,null,React.createElement(Breadcrumb,{title:\"Google Chart\",parent:\"Chart\"}),React.createElement(\"div\",{className:\"container-fluid\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"PIE CHART 1\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(Chart,{width:'100%',height:'400px',chartType:\"PieChart\",loader:React.createElement(\"div\",null,\"Loading Chart\"),data:[['Task','Hours per Day'],['Work',6.7],['Eat',13.3],['Commute',20],['Watch TV',26.7],['Sleep',33.3]],options:{title:'My Daily Activities',colors:[\"#4466f2\",\"#1ea6ec\",\"#22af47\",\"#1b7aff\",\"#f85370\"]},rootProps:{'data-testid':'1'}})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"PIE CHART 1\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(Chart,{width:'100%',height:'400px',chartType:\"PieChart\",loader:React.createElement(\"div\",null,\"Loading Chart\"),data:[['Task','Hours per Day'],['Work',6.7],['Eat',13.3],['Commute',20],['Watch TV',26.7],['Sleep',33.3]],options:{title:'My Daily Activities',colors:[\"#4466f2\",\"#1ea6ec\",\"#22af47\",\"#1b7aff\",\"#f85370\"],// Just add this option\nis3D:true},rootProps:{'data-testid':'2'}})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"Donut Chart\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(Chart,{width:'100%',height:'400px',chartType:\"PieChart\",loader:React.createElement(\"div\",null,\"Loading Chart\"),data:[['Task','Hours per Day'],['Work',11],['Eat',2],['Commute',2],['Watch TV',2],['Sleep',7]],options:{title:'My Daily Activities',colors:[\"#4466f2\",\"#1ea6ec\",\"#22af47\",\"#1b7aff\",\"#f85370\"],// Just add this option\npieHole:0.4},rootProps:{'data-testid':'3'}})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"Rotating A Pie Chart\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(Chart,{width:'100%',height:'400px',chartType:\"PieChart\",loader:React.createElement(\"div\",null,\"Loading Chart\"),data:[['Language','Speakers (in millions)'],['German',2.85],['French',1.66],['Italian',0.316],['Romansh',0.0791]],options:{legend:'none',pieSliceText:'label',title:'Swiss Language Use (100 degree rotation)',colors:[\"#4466f2\",\"#1ea6ec\",\"#22af47\",\"#1b7aff\",\"#f85370\"],pieStartAngle:100},rootProps:{'data-testid':'4'}})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"Rotating A Pie Chart\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(Chart,{width:'100%',height:'400px',chartType:\"PieChart\",loader:React.createElement(\"div\",null,\"Loading Chart\"),data:[['Language','Speakers (in millions)'],['Assamese',13],['Bengali',83],['Bodo',1.4],['Dogri',2.3],['Gujarati',46],['Hindi',300],['Kannada',38],['Kashmiri',5.5],['Konkani',5],['Maithili',20],['Malayalam',33],['Manipuri',1.5],['Marathi',72],['Nepali',2.9],['Oriya',33],['Punjabi',29],['Sanskrit',0.01],['Santhali',6.5],['Sindhi',2.5],['Tamil',61],['Telugu',74],['Urdu',52]],options:{title:'Indian Language Use',legend:'none',pieSliceText:'label',colors:[\"#4466f2\",\"#1ea6ec\",\"#22af47\",\"#007bff\",\"#ff9f40\",\"#FF5370\",\"#4466f2\",\"#1ea6ec\",\"#22af47\",\"#007bff\",\"#ff9f40\",\"#FF5370\",\"#4466f2\",\"#1ea6ec\",\"#22af47\",\"#007bff\",\"#ff9f40\",\"#FF5370\",\"#fd7b6c\",\"#22af47\",\"#007bff\",\"#ff9f40\"],slices:{4:{offset:0.2},12:{offset:0.3},14:{offset:0.4},15:{offset:0.5}}},rootProps:{'data-testid':'5'}})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"Slice Visibility Threshold\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(Chart,{width:'100%',height:'400px',chartType:\"PieChart\",loader:React.createElement(\"div\",null,\"Loading Chart\"),data:[['Pizza','Popularity'],['Pepperoni',33],['Hawaiian',26],['Mushroom',22],['Sausage',10],// Below limit.\n['Anchovies',9]// Below limit.\n],options:{title:'Popularity of Types of Pizza',colors:[\"#4466f2\",\"#1ea6ec\",\"#fa9f40\",\"#31af47\",\"#4466f2\"],sliceVisibilityThreshold:0.2// 20%\n},rootProps:{'data-testid':'7'}})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"Area Chart\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(Chart,{width:'100%',height:'300px',chartType:\"AreaChart\",loader:React.createElement(\"div\",null,\"Loading Chart\"),data:[['Year','Sales','Expenses'],['2013',1000,400],['2014',1170,460],['2015',660,1120],['2016',1030,540]],options:{title:'Company Performance',hAxis:{title:'Year',titleTextStyle:{color:'#333'}},vAxis:{minValue:0},colors:[\"#4466f2\",\"#1ea6ec\"],// For the legend to fit, we make the chart area smaller\nchartArea:{width:'50%',height:'70%'}// lineWidth: 25\n}// For tests\n,rootProps:{'data-testid':'1'}})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"Stacking Area Chart\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(Chart,{width:'100%',height:'300px',chartType:\"AreaChart\",loader:React.createElement(\"div\",null,\"Loading Chart\"),data:[['Year','Sales','Expenses'],['2013',1000,400],['2014',1170,460],['2015',660,1120],['2016',1030,540]],options:{isStacked:true,height:300,legend:{position:'top',maxLines:3},vAxis:{minValue:0},colors:[\"#4466f2\",\"#1ea6ec\"]// lineWidth: 25\n}// For tests\n,rootProps:{'data-testid':'2'}})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"Basic bar Chart\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(Chart,{width:'100%',height:'400px',chartType:\"BarChart\",loader:React.createElement(\"div\",null,\"Loading Chart\"),data:[['City','2010 Population','2000 Population'],['New York City, NY',8175000,8008000],['Los Angeles, CA',3792000,3694000],['Chicago, IL',2695000,2896000],['Houston, TX',2099000,1953000],['Philadelphia, PA',1526000,1517000]],options:{title:'Population of Largest U.S. Cities',chartArea:{width:'50%'},colors:[\"#4466f2\",\"#1ea6ec\"],hAxis:{title:'Total Population',minValue:0},vAxis:{title:'City'}}// For tests\n,rootProps:{'data-testid':'1'}})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"Material Design\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(Chart,{width:'100%',height:'400px',chartType:\"Bar\",loader:React.createElement(\"div\",null,\"Loading Chart\"),data:[['Year','Sales','Expenses','Profit'],['2014',1000,400,200],['2015',1170,460,250],['2016',660,1120,300],['2017',1030,540,350]],options:{// Material design options\ncolors:[\"#4466f2\",\"#1ea6ec\",\"#31af47\"],chart:{title:'Company Performance',subtitle:'Sales, Expenses, and Profit: 2014-2017'}}// For tests\n,rootProps:{'data-testid':'2'}})))),React.createElement(\"div\",{className:\"col-sm-12\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"Line Chart\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(Chart,{width:'100%',height:'400px',chartType:\"LineChart\",loader:React.createElement(\"div\",null,\"Loading Chart\"),data:[['x','dogs','cats'],[0,0,0],[1,10,5],[2,23,15],[3,17,9],[4,18,10],[5,9,5],[6,11,3],[7,27,19]],options:{hAxis:{title:'Time'},vAxis:{title:'Popularity'},colors:[\"#4466f2\",\"#1ea6ec\"],series:{1:{curveType:'function'}}},rootProps:{'data-testid':'2'}})))),React.createElement(\"div\",{className:\"col-sm-12\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"Combo Chart\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(Chart,{width:'100%',height:'300px',chartType:\"ComboChart\",loader:React.createElement(\"div\",null,\"Loading Chart\"),data:[['Month','Bolivia','Ecuador','Madagascar','Papua New Guinea','Rwanda','Average'],['2004/05',165,938,522,998,450,614.6],['2005/06',135,1120,599,1268,288,682],['2006/07',157,1167,587,807,397,623],['2007/08',139,1110,615,968,215,609.4],['2008/09',136,691,629,1026,366,569.6]],options:{title:'Monthly Coffee Production by Country',vAxis:{title:'Cups'},hAxis:{title:'Month'},seriesType:'bars',colors:[\"#4466f2\",\"#1ea6ec\",\"#22af47\",\"#FF5370\",\"#007bff\"],series:{5:{type:'line'}}},rootProps:{'data-testid':'1'}})))))));};export default GoogleChart;","map":{"version":3,"sources":["/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/src/components/charts/googleChart.js"],"names":["React","Fragment","Breadcrumb","Chart","GoogleChart","title","colors","is3D","pieHole","legend","pieSliceText","pieStartAngle","slices","offset","sliceVisibilityThreshold","hAxis","titleTextStyle","color","vAxis","minValue","chartArea","width","height","isStacked","position","maxLines","chart","subtitle","series","curveType","seriesType","type"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CACA,OAASC,KAAT,KAAsB,qBAAtB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,MACI,qBAAC,QAAD,MACI,oBAAC,UAAD,EAAY,KAAK,CAAC,cAAlB,CAAiC,MAAM,CAAC,OAAxC,EADJ,CAEI,2BAAK,SAAS,CAAC,iBAAf,EACI,2BAAK,SAAS,CAAC,KAAf,EACI,2BAAK,SAAS,CAAC,UAAf,EACI,2BAAK,SAAS,CAAC,MAAf,EACI,2BAAK,SAAS,CAAC,aAAf,EACI,4CADJ,CADJ,CAII,2BAAK,SAAS,CAAC,WAAf,EACI,oBAAC,KAAD,EACI,KAAK,CAAE,MADX,CAEI,MAAM,CAAE,OAFZ,CAGI,SAAS,CAAC,UAHd,CAII,MAAM,CAAE,+CAJZ,CAKI,IAAI,CAAE,CACF,CAAC,MAAD,CAAS,eAAT,CADE,CAEF,CAAC,MAAD,CAAS,GAAT,CAFE,CAGF,CAAC,KAAD,CAAQ,IAAR,CAHE,CAIF,CAAC,SAAD,CAAY,EAAZ,CAJE,CAKF,CAAC,UAAD,CAAa,IAAb,CALE,CAMF,CAAC,OAAD,CAAU,IAAV,CANE,CALV,CAaI,OAAO,CAAE,CACLC,KAAK,CAAE,qBADF,CAELC,MAAM,CAAE,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CAFH,CAbb,CAiBI,SAAS,CAAE,CAAE,cAAe,GAAjB,CAjBf,EADJ,CAJJ,CADJ,CADJ,CA6BI,2BAAK,SAAS,CAAC,UAAf,EACI,2BAAK,SAAS,CAAC,MAAf,EACI,2BAAK,SAAS,CAAC,aAAf,EACI,4CADJ,CADJ,CAII,2BAAK,SAAS,CAAC,WAAf,EACI,oBAAC,KAAD,EACI,KAAK,CAAE,MADX,CAEI,MAAM,CAAE,OAFZ,CAGI,SAAS,CAAC,UAHd,CAII,MAAM,CAAE,+CAJZ,CAKI,IAAI,CAAE,CACF,CAAC,MAAD,CAAS,eAAT,CADE,CAEF,CAAC,MAAD,CAAS,GAAT,CAFE,CAGF,CAAC,KAAD,CAAQ,IAAR,CAHE,CAIF,CAAC,SAAD,CAAY,EAAZ,CAJE,CAKF,CAAC,UAAD,CAAa,IAAb,CALE,CAMF,CAAC,OAAD,CAAU,IAAV,CANE,CALV,CAaI,OAAO,CAAE,CACLD,KAAK,CAAE,qBADF,CAELC,MAAM,CAAE,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CAFH,CAGL;AACAC,IAAI,CAAE,IAJD,CAbb,CAmBI,SAAS,CAAE,CAAE,cAAe,GAAjB,CAnBf,EADJ,CAJJ,CADJ,CA7BJ,CA2DI,2BAAK,SAAS,CAAC,UAAf,EACI,2BAAK,SAAS,CAAC,MAAf,EACI,2BAAK,SAAS,CAAC,aAAf,EACI,4CADJ,CADJ,CAII,2BAAK,SAAS,CAAC,WAAf,EACI,oBAAC,KAAD,EACI,KAAK,CAAE,MADX,CAEI,MAAM,CAAE,OAFZ,CAGI,SAAS,CAAC,UAHd,CAII,MAAM,CAAE,+CAJZ,CAKI,IAAI,CAAE,CACF,CAAC,MAAD,CAAS,eAAT,CADE,CAEF,CAAC,MAAD,CAAS,EAAT,CAFE,CAGF,CAAC,KAAD,CAAQ,CAAR,CAHE,CAIF,CAAC,SAAD,CAAY,CAAZ,CAJE,CAKF,CAAC,UAAD,CAAa,CAAb,CALE,CAMF,CAAC,OAAD,CAAU,CAAV,CANE,CALV,CAaI,OAAO,CAAE,CACLF,KAAK,CAAE,qBADF,CAELC,MAAM,CAAE,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CAFH,CAGL;AACAE,OAAO,CAAE,GAJJ,CAbb,CAmBI,SAAS,CAAE,CAAE,cAAe,GAAjB,CAnBf,EADJ,CAJJ,CADJ,CA3DJ,CAyFI,2BAAK,SAAS,CAAC,UAAf,EACI,2BAAK,SAAS,CAAC,MAAf,EACI,2BAAK,SAAS,CAAC,aAAf,EACI,qDADJ,CADJ,CAII,2BAAK,SAAS,CAAC,WAAf,EACI,oBAAC,KAAD,EACI,KAAK,CAAE,MADX,CAEI,MAAM,CAAE,OAFZ,CAGI,SAAS,CAAC,UAHd,CAII,MAAM,CAAE,+CAJZ,CAKI,IAAI,CAAE,CACF,CAAC,UAAD,CAAa,wBAAb,CADE,CAEF,CAAC,QAAD,CAAW,IAAX,CAFE,CAGF,CAAC,QAAD,CAAW,IAAX,CAHE,CAIF,CAAC,SAAD,CAAY,KAAZ,CAJE,CAKF,CAAC,SAAD,CAAY,MAAZ,CALE,CALV,CAYI,OAAO,CAAE,CACLC,MAAM,CAAE,MADH,CAELC,YAAY,CAAE,OAFT,CAGLL,KAAK,CAAE,0CAHF,CAILC,MAAM,CAAE,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CAJH,CAKLK,aAAa,CAAE,GALV,CAZb,CAmBI,SAAS,CAAE,CAAE,cAAe,GAAjB,CAnBf,EADJ,CAJJ,CADJ,CAzFJ,CAuHI,2BAAK,SAAS,CAAC,UAAf,EACI,2BAAK,SAAS,CAAC,MAAf,EACI,2BAAK,SAAS,CAAC,aAAf,EACI,qDADJ,CADJ,CAII,2BAAK,SAAS,CAAC,WAAf,EACI,oBAAC,KAAD,EACI,KAAK,CAAE,MADX,CAEI,MAAM,CAAE,OAFZ,CAGI,SAAS,CAAC,UAHd,CAII,MAAM,CAAE,+CAJZ,CAKI,IAAI,CAAE,CACF,CAAC,UAAD,CAAa,wBAAb,CADE,CAEF,CAAC,UAAD,CAAa,EAAb,CAFE,CAGF,CAAC,SAAD,CAAY,EAAZ,CAHE,CAIF,CAAC,MAAD,CAAS,GAAT,CAJE,CAKF,CAAC,OAAD,CAAU,GAAV,CALE,CAMF,CAAC,UAAD,CAAa,EAAb,CANE,CAOF,CAAC,OAAD,CAAU,GAAV,CAPE,CAQF,CAAC,SAAD,CAAY,EAAZ,CARE,CASF,CAAC,UAAD,CAAa,GAAb,CATE,CAUF,CAAC,SAAD,CAAY,CAAZ,CAVE,CAWF,CAAC,UAAD,CAAa,EAAb,CAXE,CAYF,CAAC,WAAD,CAAc,EAAd,CAZE,CAaF,CAAC,UAAD,CAAa,GAAb,CAbE,CAcF,CAAC,SAAD,CAAY,EAAZ,CAdE,CAeF,CAAC,QAAD,CAAW,GAAX,CAfE,CAgBF,CAAC,OAAD,CAAU,EAAV,CAhBE,CAiBF,CAAC,SAAD,CAAY,EAAZ,CAjBE,CAkBF,CAAC,UAAD,CAAa,IAAb,CAlBE,CAmBF,CAAC,UAAD,CAAa,GAAb,CAnBE,CAoBF,CAAC,QAAD,CAAW,GAAX,CApBE,CAqBF,CAAC,OAAD,CAAU,EAAV,CArBE,CAsBF,CAAC,QAAD,CAAW,EAAX,CAtBE,CAuBF,CAAC,MAAD,CAAS,EAAT,CAvBE,CALV,CA8BI,OAAO,CAAE,CACLN,KAAK,CAAE,qBADF,CAELI,MAAM,CAAE,MAFH,CAGLC,YAAY,CAAE,OAHT,CAILJ,MAAM,CAAE,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CAAwD,SAAxD,CAAkE,SAAlE,CAA6E,SAA7E,CAAwF,SAAxF,CAAmG,SAAnG,CAA8G,SAA9G,CAAyH,SAAzH,CAAmI,SAAnI,CAA8I,SAA9I,CAAyJ,SAAzJ,CAAoK,SAApK,CAA+K,SAA/K,CAA0L,SAA1L,CAAqM,SAArM,CAAgN,SAAhN,CAA0N,SAA1N,CAAqO,SAArO,CAJH,CAKLM,MAAM,CAAE,CACJ,EAAG,CAAEC,MAAM,CAAE,GAAV,CADC,CAEJ,GAAI,CAAEA,MAAM,CAAE,GAAV,CAFA,CAGJ,GAAI,CAAEA,MAAM,CAAE,GAAV,CAHA,CAIJ,GAAI,CAAEA,MAAM,CAAE,GAAV,CAJA,CALH,CA9Bb,CA0CI,SAAS,CAAE,CAAE,cAAe,GAAjB,CA1Cf,EADJ,CAJJ,CADJ,CAvHJ,CA4KI,2BAAK,SAAS,CAAC,UAAf,EACI,2BAAK,SAAS,CAAC,MAAf,EACI,2BAAK,SAAS,CAAC,aAAf,EACI,2DADJ,CADJ,CAII,2BAAK,SAAS,CAAC,WAAf,EACI,oBAAC,KAAD,EACI,KAAK,CAAE,MADX,CAEI,MAAM,CAAE,OAFZ,CAGI,SAAS,CAAC,UAHd,CAII,MAAM,CAAE,+CAJZ,CAKI,IAAI,CAAE,CACF,CAAC,OAAD,CAAU,YAAV,CADE,CAEF,CAAC,WAAD,CAAc,EAAd,CAFE,CAGF,CAAC,UAAD,CAAa,EAAb,CAHE,CAIF,CAAC,UAAD,CAAa,EAAb,CAJE,CAKF,CAAC,SAAD,CAAY,EAAZ,CALE,CAKe;AACjB,CAAC,WAAD,CAAc,CAAd,CAAkB;AANhB,CALV,CAaI,OAAO,CAAE,CACLR,KAAK,CAAE,8BADF,CAELC,MAAM,CAAE,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CAFH,CAGLQ,wBAAwB,CAAE,GAAK;AAH1B,CAbb,CAkBI,SAAS,CAAE,CAAE,cAAe,GAAjB,CAlBf,EADJ,CAJJ,CADJ,CA5KJ,CAyMI,2BAAK,SAAS,CAAC,UAAf,EACI,2BAAK,SAAS,CAAC,MAAf,EACI,2BAAK,SAAS,CAAC,aAAf,EACI,2CADJ,CADJ,CAII,2BAAK,SAAS,CAAC,WAAf,EACI,oBAAC,KAAD,EACI,KAAK,CAAE,MADX,CAEI,MAAM,CAAE,OAFZ,CAGI,SAAS,CAAC,WAHd,CAII,MAAM,CAAE,+CAJZ,CAKI,IAAI,CAAE,CACF,CAAC,MAAD,CAAS,OAAT,CAAkB,UAAlB,CADE,CAEF,CAAC,MAAD,CAAS,IAAT,CAAe,GAAf,CAFE,CAGF,CAAC,MAAD,CAAS,IAAT,CAAe,GAAf,CAHE,CAIF,CAAC,MAAD,CAAS,GAAT,CAAc,IAAd,CAJE,CAKF,CAAC,MAAD,CAAS,IAAT,CAAe,GAAf,CALE,CALV,CAYI,OAAO,CAAE,CACLT,KAAK,CAAE,qBADF,CAELU,KAAK,CAAE,CAAEV,KAAK,CAAE,MAAT,CAAiBW,cAAc,CAAE,CAAEC,KAAK,CAAE,MAAT,CAAjC,CAFF,CAGLC,KAAK,CAAE,CAAEC,QAAQ,CAAE,CAAZ,CAHF,CAILb,MAAM,CAAE,CAAC,SAAD,CAAY,SAAZ,CAJH,CAKL;AACAc,SAAS,CAAE,CAAEC,KAAK,CAAE,KAAT,CAAgBC,MAAM,CAAE,KAAxB,CACX;AAPK,CAST;AArBJ,CAsBI,SAAS,CAAE,CAAE,cAAe,GAAjB,CAtBf,EADJ,CAJJ,CADJ,CAzMJ,CA0OI,2BAAK,SAAS,CAAC,UAAf,EACI,2BAAK,SAAS,CAAC,MAAf,EACI,2BAAK,SAAS,CAAC,aAAf,EACI,oDADJ,CADJ,CAII,2BAAK,SAAS,CAAC,WAAf,EACI,oBAAC,KAAD,EACI,KAAK,CAAE,MADX,CAEI,MAAM,CAAE,OAFZ,CAGI,SAAS,CAAC,WAHd,CAII,MAAM,CAAE,+CAJZ,CAKI,IAAI,CAAE,CACF,CAAC,MAAD,CAAS,OAAT,CAAkB,UAAlB,CADE,CAEF,CAAC,MAAD,CAAS,IAAT,CAAe,GAAf,CAFE,CAGF,CAAC,MAAD,CAAS,IAAT,CAAe,GAAf,CAHE,CAIF,CAAC,MAAD,CAAS,GAAT,CAAc,IAAd,CAJE,CAKF,CAAC,MAAD,CAAS,IAAT,CAAe,GAAf,CALE,CALV,CAYI,OAAO,CAAE,CACLC,SAAS,CAAE,IADN,CAELD,MAAM,CAAE,GAFH,CAGLb,MAAM,CAAE,CAAEe,QAAQ,CAAE,KAAZ,CAAmBC,QAAQ,CAAE,CAA7B,CAHH,CAILP,KAAK,CAAE,CAAEC,QAAQ,CAAE,CAAZ,CAJF,CAKLb,MAAM,CAAE,CAAC,SAAD,CAAY,SAAZ,CACR;AANK,CAQT;AApBJ,CAqBI,SAAS,CAAE,CAAE,cAAe,GAAjB,CArBf,EADJ,CAJJ,CADJ,CA1OJ,CA0QI,2BAAK,SAAS,CAAC,UAAf,EACI,2BAAK,SAAS,CAAC,MAAf,EACI,2BAAK,SAAS,CAAC,aAAf,EACI,gDADJ,CADJ,CAII,2BAAK,SAAS,CAAC,WAAf,EACI,oBAAC,KAAD,EACI,KAAK,CAAE,MADX,CAEI,MAAM,CAAE,OAFZ,CAGI,SAAS,CAAC,UAHd,CAII,MAAM,CAAE,+CAJZ,CAKI,IAAI,CAAE,CACF,CAAC,MAAD,CAAS,iBAAT,CAA4B,iBAA5B,CADE,CAEF,CAAC,mBAAD,CAAsB,OAAtB,CAA+B,OAA/B,CAFE,CAGF,CAAC,iBAAD,CAAoB,OAApB,CAA6B,OAA7B,CAHE,CAIF,CAAC,aAAD,CAAgB,OAAhB,CAAyB,OAAzB,CAJE,CAKF,CAAC,aAAD,CAAgB,OAAhB,CAAyB,OAAzB,CALE,CAMF,CAAC,kBAAD,CAAqB,OAArB,CAA8B,OAA9B,CANE,CALV,CAaI,OAAO,CAAE,CACLD,KAAK,CAAE,mCADF,CAELe,SAAS,CAAE,CAAEC,KAAK,CAAE,KAAT,CAFN,CAGLf,MAAM,CAAE,CAAC,SAAD,CAAY,SAAZ,CAHH,CAILS,KAAK,CAAE,CACHV,KAAK,CAAE,kBADJ,CAEHc,QAAQ,CAAE,CAFP,CAJF,CAQLD,KAAK,CAAE,CACHb,KAAK,CAAE,MADJ,CARF,CAYT;AAzBJ,CA0BI,SAAS,CAAE,CAAE,cAAe,GAAjB,CA1Bf,EADJ,CAJJ,CADJ,CA1QJ,CA+SI,2BAAK,SAAS,CAAC,UAAf,EACI,2BAAK,SAAS,CAAC,MAAf,EACI,2BAAK,SAAS,CAAC,aAAf,EACI,gDADJ,CADJ,CAII,2BAAK,SAAS,CAAC,WAAf,EACI,oBAAC,KAAD,EACI,KAAK,CAAE,MADX,CAEI,MAAM,CAAE,OAFZ,CAGI,SAAS,CAAC,KAHd,CAII,MAAM,CAAE,+CAJZ,CAKI,IAAI,CAAE,CACF,CAAC,MAAD,CAAS,OAAT,CAAkB,UAAlB,CAA8B,QAA9B,CADE,CAEF,CAAC,MAAD,CAAS,IAAT,CAAe,GAAf,CAAoB,GAApB,CAFE,CAGF,CAAC,MAAD,CAAS,IAAT,CAAe,GAAf,CAAoB,GAApB,CAHE,CAIF,CAAC,MAAD,CAAS,GAAT,CAAc,IAAd,CAAoB,GAApB,CAJE,CAKF,CAAC,MAAD,CAAS,IAAT,CAAe,GAAf,CAAoB,GAApB,CALE,CALV,CAYI,OAAO,CAAE,CACL;AACAC,MAAM,CAAE,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAFH,CAGLoB,KAAK,CAAE,CACHrB,KAAK,CAAE,qBADJ,CAEHsB,QAAQ,CAAE,wCAFP,CAHF,CAQT;AApBJ,CAqBI,SAAS,CAAE,CAAE,cAAe,GAAjB,CArBf,EADJ,CAJJ,CADJ,CA/SJ,CA+UI,2BAAK,SAAS,CAAC,WAAf,EACI,2BAAK,SAAS,CAAC,MAAf,EACI,2BAAK,SAAS,CAAC,aAAf,EACI,2CADJ,CADJ,CAII,2BAAK,SAAS,CAAC,WAAf,EACI,oBAAC,KAAD,EACI,KAAK,CAAE,MADX,CAEI,MAAM,CAAE,OAFZ,CAGI,SAAS,CAAC,WAHd,CAII,MAAM,CAAE,+CAJZ,CAKI,IAAI,CAAE,CACF,CAAC,GAAD,CAAM,MAAN,CAAc,MAAd,CADE,CAEF,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAFE,CAGF,CAAC,CAAD,CAAI,EAAJ,CAAQ,CAAR,CAHE,CAIF,CAAC,CAAD,CAAI,EAAJ,CAAQ,EAAR,CAJE,CAKF,CAAC,CAAD,CAAI,EAAJ,CAAQ,CAAR,CALE,CAMF,CAAC,CAAD,CAAI,EAAJ,CAAQ,EAAR,CANE,CAOF,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAPE,CAQF,CAAC,CAAD,CAAI,EAAJ,CAAQ,CAAR,CARE,CASF,CAAC,CAAD,CAAI,EAAJ,CAAQ,EAAR,CATE,CALV,CAgBI,OAAO,CAAE,CACLZ,KAAK,CAAE,CACHV,KAAK,CAAE,MADJ,CADF,CAILa,KAAK,CAAE,CACHb,KAAK,CAAE,YADJ,CAJF,CAOLC,MAAM,CAAE,CAAC,SAAD,CAAY,SAAZ,CAPH,CAQLsB,MAAM,CAAE,CACJ,EAAG,CAAEC,SAAS,CAAE,UAAb,CADC,CARH,CAhBb,CA4BI,SAAS,CAAE,CAAE,cAAe,GAAjB,CA5Bf,EADJ,CAJJ,CADJ,CA/UJ,CAsXI,2BAAK,SAAS,CAAC,WAAf,EACI,2BAAK,SAAS,CAAC,MAAf,EACI,2BAAK,SAAS,CAAC,aAAf,EACI,4CADJ,CADJ,CAII,2BAAK,SAAS,CAAC,WAAf,EACI,oBAAC,KAAD,EACI,KAAK,CAAE,MADX,CAEI,MAAM,CAAE,OAFZ,CAGI,SAAS,CAAC,YAHd,CAII,MAAM,CAAE,+CAJZ,CAKI,IAAI,CAAE,CACF,CACI,OADJ,CAEI,SAFJ,CAGI,SAHJ,CAII,YAJJ,CAKI,kBALJ,CAMI,QANJ,CAOI,SAPJ,CADE,CAUF,CAAC,SAAD,CAAY,GAAZ,CAAiB,GAAjB,CAAsB,GAAtB,CAA2B,GAA3B,CAAgC,GAAhC,CAAqC,KAArC,CAVE,CAWF,CAAC,SAAD,CAAY,GAAZ,CAAiB,IAAjB,CAAuB,GAAvB,CAA4B,IAA5B,CAAkC,GAAlC,CAAuC,GAAvC,CAXE,CAYF,CAAC,SAAD,CAAY,GAAZ,CAAiB,IAAjB,CAAuB,GAAvB,CAA4B,GAA5B,CAAiC,GAAjC,CAAsC,GAAtC,CAZE,CAaF,CAAC,SAAD,CAAY,GAAZ,CAAiB,IAAjB,CAAuB,GAAvB,CAA4B,GAA5B,CAAiC,GAAjC,CAAsC,KAAtC,CAbE,CAcF,CAAC,SAAD,CAAY,GAAZ,CAAiB,GAAjB,CAAsB,GAAtB,CAA2B,IAA3B,CAAiC,GAAjC,CAAsC,KAAtC,CAdE,CALV,CAqBI,OAAO,CAAE,CACLxB,KAAK,CAAE,sCADF,CAELa,KAAK,CAAE,CAAEb,KAAK,CAAE,MAAT,CAFF,CAGLU,KAAK,CAAE,CAAEV,KAAK,CAAE,OAAT,CAHF,CAILyB,UAAU,CAAE,MAJP,CAKLxB,MAAM,CAAE,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CALH,CAMLsB,MAAM,CAAE,CAAE,EAAG,CAAEG,IAAI,CAAE,MAAR,CAAL,CANH,CArBb,CA6BI,SAAS,CAAE,CAAE,cAAe,GAAjB,CA7Bf,EADJ,CAJJ,CADJ,CAtXJ,CADJ,CAFJ,CADJ,CAuaH,CAxaD,CA0aA,cAAe3B,CAAAA,WAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport Breadcrumb from '../common/breadcrumb';\nimport { Chart } from \"react-google-charts\";\n\nconst GoogleChart = () => {\n    return (\n        <Fragment>\n            <Breadcrumb title=\"Google Chart\" parent=\"Chart\" />\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>PIE CHART 1</h5>\n                            </div>\n                            <div className=\"card-body\"> \n                                <Chart\n                                    width={'100%'}\n                                    height={'400px'}\n                                    chartType=\"PieChart\"\n                                    loader={<div>Loading Chart</div>}\n                                    data={[\n                                        ['Task', 'Hours per Day'],\n                                        ['Work', 6.7],\n                                        ['Eat', 13.3],\n                                        ['Commute', 20],\n                                        ['Watch TV', 26.7],\n                                        ['Sleep', 33.3],\n                                    ]}\n                                    options={{\n                                        title: 'My Daily Activities',\n                                        colors: [\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#1b7aff\", \"#f85370\"]\n                                    }}\n                                    rootProps={{ 'data-testid': '1' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>PIE CHART 1</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'400px'}\n                                    chartType=\"PieChart\"\n                                    loader={<div>Loading Chart</div>}\n                                    data={[\n                                        ['Task', 'Hours per Day'],\n                                        ['Work', 6.7],\n                                        ['Eat', 13.3],\n                                        ['Commute', 20],\n                                        ['Watch TV', 26.7],\n                                        ['Sleep', 33.3],\n                                    ]}\n                                    options={{\n                                        title: 'My Daily Activities',\n                                        colors: [\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#1b7aff\", \"#f85370\"],\n                                        // Just add this option\n                                        is3D: true,\n                                    }}\n                                    rootProps={{ 'data-testid': '2' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>Donut Chart</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'400px'}\n                                    chartType=\"PieChart\"\n                                    loader={<div>Loading Chart</div>}\n                                    data={[\n                                        ['Task', 'Hours per Day'],\n                                        ['Work', 11],\n                                        ['Eat', 2],\n                                        ['Commute', 2],\n                                        ['Watch TV', 2],\n                                        ['Sleep', 7],\n                                    ]}\n                                    options={{\n                                        title: 'My Daily Activities',\n                                        colors: [\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#1b7aff\", \"#f85370\"],\n                                        // Just add this option\n                                        pieHole: 0.4,\n                                    }}\n                                    rootProps={{ 'data-testid': '3' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>Rotating A Pie Chart</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'400px'}\n                                    chartType=\"PieChart\"\n                                    loader={<div>Loading Chart</div>}\n                                    data={[\n                                        ['Language', 'Speakers (in millions)'],\n                                        ['German', 2.85],\n                                        ['French', 1.66],\n                                        ['Italian', 0.316],\n                                        ['Romansh', 0.0791],\n                                    ]}\n                                    options={{\n                                        legend: 'none',\n                                        pieSliceText: 'label',\n                                        title: 'Swiss Language Use (100 degree rotation)',\n                                        colors: [\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#1b7aff\", \"#f85370\"],\n                                        pieStartAngle: 100,\n                                    }}\n                                    rootProps={{ 'data-testid': '4' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>Rotating A Pie Chart</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'400px'}\n                                    chartType=\"PieChart\"\n                                    loader={<div>Loading Chart</div>}\n                                    data={[\n                                        ['Language', 'Speakers (in millions)'],\n                                        ['Assamese', 13],\n                                        ['Bengali', 83],\n                                        ['Bodo', 1.4],\n                                        ['Dogri', 2.3],\n                                        ['Gujarati', 46],\n                                        ['Hindi', 300],\n                                        ['Kannada', 38],\n                                        ['Kashmiri', 5.5],\n                                        ['Konkani', 5],\n                                        ['Maithili', 20],\n                                        ['Malayalam', 33],\n                                        ['Manipuri', 1.5],\n                                        ['Marathi', 72],\n                                        ['Nepali', 2.9],\n                                        ['Oriya', 33],\n                                        ['Punjabi', 29],\n                                        ['Sanskrit', 0.01],\n                                        ['Santhali', 6.5],\n                                        ['Sindhi', 2.5],\n                                        ['Tamil', 61],\n                                        ['Telugu', 74],\n                                        ['Urdu', 52],\n                                    ]}\n                                    options={{\n                                        title: 'Indian Language Use',\n                                        legend: 'none',\n                                        pieSliceText: 'label',\n                                        colors: [\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#007bff\", \"#ff9f40\", \"#FF5370\",\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#007bff\", \"#ff9f40\", \"#FF5370\",\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#007bff\", \"#ff9f40\", \"#FF5370\", \"#fd7b6c\", \"#22af47\",\"#007bff\", \"#ff9f40\"],\n                                        slices: {\n                                            4: { offset: 0.2 },\n                                            12: { offset: 0.3 },\n                                            14: { offset: 0.4 },\n                                            15: { offset: 0.5 },\n                                        },\n                                    }}\n                                    rootProps={{ 'data-testid': '5' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>Slice Visibility Threshold</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'400px'}\n                                    chartType=\"PieChart\"\n                                    loader={<div>Loading Chart</div>}\n                                    data={[\n                                        ['Pizza', 'Popularity'],\n                                        ['Pepperoni', 33],\n                                        ['Hawaiian', 26],\n                                        ['Mushroom', 22],\n                                        ['Sausage', 10], // Below limit.\n                                        ['Anchovies', 9], // Below limit.\n                                    ]}\n                                    options={{\n                                        title: 'Popularity of Types of Pizza',\n                                        colors: [\"#4466f2\", \"#1ea6ec\", \"#fa9f40\", \"#31af47\", \"#4466f2\"],\n                                        sliceVisibilityThreshold: 0.2, // 20%\n                                    }}\n                                    rootProps={{ 'data-testid': '7' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>Area Chart</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'300px'}\n                                    chartType=\"AreaChart\"\n                                    loader={<div>Loading Chart</div>}\n                                    data={[\n                                        ['Year', 'Sales', 'Expenses'],\n                                        ['2013', 1000, 400],\n                                        ['2014', 1170, 460],\n                                        ['2015', 660, 1120],\n                                        ['2016', 1030, 540],\n                                    ]}\n                                    options={{\n                                        title: 'Company Performance',\n                                        hAxis: { title: 'Year', titleTextStyle: { color: '#333' } },\n                                        vAxis: { minValue: 0 },\n                                        colors: [\"#4466f2\", \"#1ea6ec\"],\n                                        // For the legend to fit, we make the chart area smaller\n                                        chartArea: { width: '50%', height: '70%' },\n                                        // lineWidth: 25\n                                    }}\n                                    // For tests\n                                    rootProps={{ 'data-testid': '1' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>Stacking Area Chart</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'300px'}\n                                    chartType=\"AreaChart\"\n                                    loader={<div>Loading Chart</div>}\n                                    data={[\n                                        ['Year', 'Sales', 'Expenses'],\n                                        ['2013', 1000, 400],\n                                        ['2014', 1170, 460],\n                                        ['2015', 660, 1120],\n                                        ['2016', 1030, 540],\n                                    ]}\n                                    options={{\n                                        isStacked: true,\n                                        height: 300,\n                                        legend: { position: 'top', maxLines: 3 },\n                                        vAxis: { minValue: 0 },\n                                        colors: [\"#4466f2\", \"#1ea6ec\"],\n                                        // lineWidth: 25\n                                    }}\n                                    // For tests\n                                    rootProps={{ 'data-testid': '2' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>Basic bar Chart</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'400px'}\n                                    chartType=\"BarChart\"\n                                    loader={<div>Loading Chart</div>}\n                                    data={[\n                                        ['City', '2010 Population', '2000 Population'],\n                                        ['New York City, NY', 8175000, 8008000],\n                                        ['Los Angeles, CA', 3792000, 3694000],\n                                        ['Chicago, IL', 2695000, 2896000],\n                                        ['Houston, TX', 2099000, 1953000],\n                                        ['Philadelphia, PA', 1526000, 1517000],\n                                    ]}\n                                    options={{\n                                        title: 'Population of Largest U.S. Cities',\n                                        chartArea: { width: '50%' },\n                                        colors: [\"#4466f2\", \"#1ea6ec\"],\n                                        hAxis: {\n                                            title: 'Total Population',\n                                            minValue: 0,\n                                        },\n                                        vAxis: {\n                                            title: 'City',\n                                        },\n                                    }}\n                                    // For tests\n                                    rootProps={{ 'data-testid': '1' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>Material Design</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'400px'}\n                                    chartType=\"Bar\"\n                                    loader={<div>Loading Chart</div>}\n                                    data={[\n                                        ['Year', 'Sales', 'Expenses', 'Profit'],\n                                        ['2014', 1000, 400, 200],\n                                        ['2015', 1170, 460, 250],\n                                        ['2016', 660, 1120, 300],\n                                        ['2017', 1030, 540, 350],\n                                    ]}\n                                    options={{\n                                        // Material design options\n                                        colors: [\"#4466f2\", \"#1ea6ec\", \"#31af47\"],\n                                        chart: {\n                                            title: 'Company Performance',\n                                            subtitle: 'Sales, Expenses, and Profit: 2014-2017',\n                                        },\n                                    }}\n                                    // For tests\n                                    rootProps={{ 'data-testid': '2' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>Line Chart</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'400px'}\n                                    chartType=\"LineChart\"\n                                    loader={<div>Loading Chart</div>}\n                                    data={[\n                                        ['x', 'dogs', 'cats'],\n                                        [0, 0, 0],\n                                        [1, 10, 5],\n                                        [2, 23, 15],\n                                        [3, 17, 9],\n                                        [4, 18, 10],\n                                        [5, 9, 5],\n                                        [6, 11, 3],\n                                        [7, 27, 19],\n                                    ]}\n                                    options={{\n                                        hAxis: {\n                                            title: 'Time',\n                                        },\n                                        vAxis: {\n                                            title: 'Popularity',\n                                        },\n                                        colors: [\"#4466f2\", \"#1ea6ec\"],\n                                        series: {\n                                            1: { curveType: 'function' },\n                                        },\n                                    }}\n                                    rootProps={{ 'data-testid': '2' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>Combo Chart</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'300px'}\n                                    chartType=\"ComboChart\"\n                                    loader={<div>Loading Chart</div>}\n                                    data={[\n                                        [\n                                            'Month',\n                                            'Bolivia',\n                                            'Ecuador',\n                                            'Madagascar',\n                                            'Papua New Guinea',\n                                            'Rwanda',\n                                            'Average',\n                                        ],\n                                        ['2004/05', 165, 938, 522, 998, 450, 614.6],\n                                        ['2005/06', 135, 1120, 599, 1268, 288, 682],\n                                        ['2006/07', 157, 1167, 587, 807, 397, 623],\n                                        ['2007/08', 139, 1110, 615, 968, 215, 609.4],\n                                        ['2008/09', 136, 691, 629, 1026, 366, 569.6],\n                                    ]}\n                                    options={{\n                                        title: 'Monthly Coffee Production by Country',\n                                        vAxis: { title: 'Cups' },\n                                        hAxis: { title: 'Month' },\n                                        seriesType: 'bars',\n                                        colors: [\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#FF5370\", \"#007bff\"],\n                                        series: { 5: { type: 'line' } },\n                                    }}\n                                    rootProps={{ 'data-testid': '1' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    );\n};\n\nexport default GoogleChart;"]},"metadata":{},"sourceType":"module"}