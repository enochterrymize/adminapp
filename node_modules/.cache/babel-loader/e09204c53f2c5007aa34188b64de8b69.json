{"ast":null,"code":"import _slicedToArray from\"/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from'react';import Breadcrumb from'../../common/breadcrumb';import{useSelector,useDispatch}from'react-redux';import{toast}from'react-toastify';var Todo=function Todo(){var todoList=useSelector(function(content){return content.TodoApp.allTodoItems.filter(function(item){return item.isStatus!==\"deleted\";});});var dispatch=useDispatch();var border_danger='';var _useState=useState(''),_useState2=_slicedToArray(_useState,2),addTask=_useState2[0],setAddTask=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),task=_useState4[0],setTask=_useState4[1];var _useState5=useState('pending'),_useState6=_slicedToArray(_useState5,2),status=_useState6[0],setStatus=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),markAll=_useState8[0],setMarkAll=_useState8[1];useEffect(function(){dispatch({type:'GET_LIST'});// eslint-disable-next-line\n},[]);var addNewTask=function addNewTask(){if(task===''){document.querySelector('.ng-valid').classList.remove('border-danger');document.querySelector('.ng-valid').classList.add('border-danger');}else{dispatch({type:\"ADD_NEW_ITEM\",payload:task});setAddTask('');setTask('');document.getElementById('newtask').value='';document.querySelector('.ng-valid').classList.add('taskmag-hide');document.querySelector('.ng-valid').classList.remove('taskmag-show');}};var handleRemoveTodo=function handleRemoveTodo(todoId){dispatch({type:'REMOVE_ITEM',payload:todoId});toast.success(\"Deleted Task !\");};var handleMarkedTodo=function handleMarkedTodo(itemId,itemStatus){if(itemStatus==='completed'){setStatus('pending');dispatch({type:'SELECTED_ITEM',payload:{itemId:itemId,status:status}});}else if(itemStatus==='pending'){setStatus('completed');dispatch({type:'SELECTED_ITEM',payload:{itemId:itemId,status:status}});}};var markAllStatus=function markAllStatus(){setMarkAll(!markAll);if(markAll===true){toast.error(\"All Task In-Completed !\");}else{toast.success(\"All Task Completed !\");}dispatch({type:'MARK_ALL_ITEMS',payload:markAll});};var openTaskWrapper=function openTaskWrapper(){setAddTask(' visible');};var closeTaskWrapper=function closeTaskWrapper(){setAddTask('');};var onTaskChanged=function onTaskChanged(e){setTask({task:e.currentTarget.value});};return React.createElement(Fragment,null,React.createElement(Breadcrumb,{title:\"To-do\",parent:\"To-do\"}),React.createElement(\"div\",{className:\"container-fluid\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col-xl-12\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"To-Do\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(\"div\",{className:\"todo\"},React.createElement(\"div\",{className:\"todo-list-wrapper\"},React.createElement(\"div\",{className:\"todo-list-container\"},React.createElement(\"div\",{className:\"mark-all-tasks\"},React.createElement(\"div\",{className:\"mark-all-tasks-container\"},React.createElement(\"span\",{className:\"mark-all-btn\",id:\"mark-all-finished\",role:\"button\"},React.createElement(\"span\",{className:\"btn-label\"},\"Mark all as finished\"),React.createElement(\"span\",{className:\"action-box completed\",onClick:markAllStatus},markAll&&React.createElement(\"i\",{className:\"icon\"},React.createElement(\"i\",{className:\"icon-check\"})))),React.createElement(\"span\",{className:\"mark-all-btn move-down\",id:\"mark-all-incomplete\",role:\"button\"},React.createElement(\"span\",{className:\"btn-label\"},\"Mark all as Incomplete\"),React.createElement(\"span\",{className:\"action-box\"},React.createElement(\"i\",{className:\"icon\"},React.createElement(\"i\",{className:\"icon-check\"})))))),React.createElement(\"div\",{className:\"todo-list-body\"},React.createElement(\"ul\",{id:\"todo-list\"},todoList.length>0?todoList.map(function(todo,index){return React.createElement(\"li\",{className:\"task \"+todo.status,key:index},React.createElement(\"div\",{className:\"task-container\"},React.createElement(\"h4\",{className:\"task-label\"},todo.title),React.createElement(\"span\",{className:\"task-action-btn\"},React.createElement(\"span\",{className:\"action-box large delete-btn\",title:\"Delete Task\",onClick:function onClick(){return handleRemoveTodo(todo.id);}},React.createElement(\"i\",{className:\"icon\"},React.createElement(\"i\",{className:\"icon-trash\"}))),React.createElement(\"span\",{className:\"action-box large complete-btn\",title:\"Mark Complete\",onClick:function onClick(){return handleMarkedTodo(todo.id,status);}},React.createElement(\"i\",{className:\"icon\"},React.createElement(\"i\",{className:\"icon-check\"}))))));}):'')),React.createElement(\"div\",{className:\"todo-list-footer\"},React.createElement(\"div\",{className:\"add-task-btn-wrapper\"},React.createElement(\"span\",{className:\"add-task-btn\"},React.createElement(\"button\",{className:\"btn btn-primary\",onClick:openTaskWrapper},React.createElement(\"i\",{className:\"icon-plus\"}),\" Add new task\"))),React.createElement(\"div\",{className:\"new-task-wrapper\"+addTask},React.createElement(\"textarea\",{className:\"ng-untouched ng-pristine ng-valid\"+border_danger,id:\"newtask\",placeholder:\"Enter new task here. . .\",defaultValue:task,onChange:onTaskChanged}),React.createElement(\"span\",{className:\"btn btn-danger cancel-btn\",id:\"close-task-panel\",onClick:closeTaskWrapper},\"Close\"),React.createElement(\"span\",{className:\"btn btn-success ml-3 add-new-task-btn\",id:\"add-task\",onClick:addNewTask},\"Add Task\"))))),React.createElement(\"div\",{className:\"notification-popup hide\"},React.createElement(\"p\",null,React.createElement(\"span\",{className:\"task\"}),React.createElement(\"span\",{className:\"notification-text\"})))),React.createElement(\"script\",{id:\"task-template\",type:\"tect/template\"},React.createElement(\"li\",{className:\"task\"},React.createElement(\"div\",{className:\"task-container\"},React.createElement(\"h4\",{className:\"task-label\"},\"HEllo\"),React.createElement(\"span\",{className:\"task-action-btn\"},React.createElement(\"span\",{className:\"action-box large delete-btn\",title:\"Delete Task\"},React.createElement(\"i\",{className:\"icon\"},React.createElement(\"i\",{className:\"icon-trash\"}))),React.createElement(\"span\",{className:\"action-box large complete-btn\",title:\"Mark Complete\"},React.createElement(\"i\",{className:\"icon\"},React.createElement(\"i\",{className:\"icon-check\"})))))))))))));};export default Todo;","map":{"version":3,"sources":["/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/src/components/applications/todo-app/todo.js"],"names":["React","Fragment","useState","useEffect","Breadcrumb","useSelector","useDispatch","toast","Todo","todoList","content","TodoApp","allTodoItems","filter","item","isStatus","dispatch","border_danger","addTask","setAddTask","task","setTask","status","setStatus","markAll","setMarkAll","type","addNewTask","document","querySelector","classList","remove","add","payload","getElementById","value","handleRemoveTodo","todoId","success","handleMarkedTodo","itemId","itemStatus","markAllStatus","error","openTaskWrapper","closeTaskWrapper","onTaskChanged","e","currentTarget","length","map","todo","index","title","id"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport Breadcrumb from '../../common/breadcrumb';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nconst Todo = () => {\n    const todoList = useSelector(content => content.TodoApp.allTodoItems.filter((item) => item.isStatus !== \"deleted\"));\n    const dispatch = useDispatch();\n    const border_danger = '';\n    const [addTask, setAddTask] = useState('');\n    const [task, setTask] = useState('');\n    const [status, setStatus] = useState('pending')\n    const [markAll, setMarkAll] = useState(false);\n    useEffect(() => {\n        dispatch({ type: 'GET_LIST' });\n        // eslint-disable-next-line\n    },[]);\n\n    const addNewTask = () => {\n        if (task === '') {\n            document.querySelector('.ng-valid').classList.remove('border-danger')\n            document.querySelector('.ng-valid').classList.add('border-danger')\n        } else {\n            dispatch({ type: \"ADD_NEW_ITEM\", payload: task })\n            setAddTask('')\n            setTask('')\n            document.getElementById('newtask').value = '';\n            document.querySelector('.ng-valid').classList.add('taskmag-hide')\n            document.querySelector('.ng-valid').classList.remove('taskmag-show')\n        }\n    }\n\n    const handleRemoveTodo = (todoId) => {\n        dispatch({ type: 'REMOVE_ITEM', payload: todoId });\n        toast.success(\"Deleted Task !\");\n    }\n\n    const handleMarkedTodo = (itemId, itemStatus) => {\n        if (itemStatus === 'completed') {\n            setStatus('pending')\n            dispatch({ type: 'SELECTED_ITEM', payload: { itemId, status } });\n        }\n        else if (itemStatus === 'pending') {\n            setStatus('completed')\n            dispatch({ type: 'SELECTED_ITEM', payload: { itemId, status } });\n        }\n    }\n\n    const markAllStatus = () => {\n        setMarkAll(!markAll);\n        if(markAll === true){\n            toast.error(\"All Task In-Completed !\");\n        }else{\n            toast.success(\"All Task Completed !\");\n        }\n        dispatch({ type: 'MARK_ALL_ITEMS', payload: markAll })\n    }\n\n    const openTaskWrapper = () => {\n        setAddTask(' visible')\n    }\n\n    const closeTaskWrapper = () => {\n        setAddTask('')\n    }\n\n    const onTaskChanged = (e) => {\n        setTask({\n            task: e.currentTarget.value\n        });\n    }\n\n    return (\n        <Fragment>\n            <Breadcrumb title=\"To-do\" parent=\"To-do\" />\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-xl-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>To-Do</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"todo\">\n                                    <div className=\"todo-list-wrapper\">\n                                        <div className=\"todo-list-container\">\n                                            <div className=\"mark-all-tasks\">\n                                                <div className=\"mark-all-tasks-container\">\n                                                    <span className=\"mark-all-btn\" id=\"mark-all-finished\" role=\"button\">\n                                                        <span className=\"btn-label\">Mark all as finished</span>\n                                                        <span className=\"action-box completed\" onClick={markAllStatus}>\n                                                            {markAll &&\n                                                                <i className=\"icon\"><i className=\"icon-check\"></i></i>}\n                                                        </span>\n                                                    </span>\n                                                    <span className=\"mark-all-btn move-down\" id=\"mark-all-incomplete\" role=\"button\">\n                                                        <span className=\"btn-label\">Mark all as Incomplete</span>\n                                                        <span className=\"action-box\">\n                                                            <i className=\"icon\"><i className=\"icon-check\"></i></i>\n                                                        </span>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div className=\"todo-list-body\">\n                                                <ul id=\"todo-list\">\n                                                    {todoList.length > 0 ?\n                                                        todoList.map((todo, index) =>\n                                                            <li className={\"task \" + todo.status} key={index} >\n                                                                <div className=\"task-container\">\n                                                                    <h4 className=\"task-label\">{todo.title}</h4>\n                                                                    <span className=\"task-action-btn\">\n                                                                        <span className=\"action-box large delete-btn\" title=\"Delete Task\" onClick={() => handleRemoveTodo(todo.id)} >\n                                                                            <i className=\"icon\"><i className=\"icon-trash\"></i></i></span>\n                                                                        <span className=\"action-box large complete-btn\" title=\"Mark Complete\" onClick={() => handleMarkedTodo(todo.id, status)} >\n                                                                            <i className=\"icon\"><i className=\"icon-check\"></i></i>\n                                                                        </span>\n                                                                    </span>\n                                                                </div>\n                                                            </li>\n                                                        ) : ''}\n                                                </ul>\n                                            </div>\n                                            <div className=\"todo-list-footer\">\n                                                <div className=\"add-task-btn-wrapper\"><span className=\"add-task-btn\">\n                                                    <button className=\"btn btn-primary\" onClick={openTaskWrapper} >\n                                                        <i className=\"icon-plus\"></i> Add new task</button></span></div>\n                                                <div className={\"new-task-wrapper\" + addTask}>\n                                                    <textarea\n                                                        className={\"ng-untouched ng-pristine ng-valid\" + border_danger}\n                                                        id=\"newtask\"\n                                                        placeholder=\"Enter new task here. . .\"\n                                                        defaultValue={task}\n                                                        onChange={onTaskChanged}\n                                                    >\n                                                    </textarea>\n                                                    <span className=\"btn btn-danger cancel-btn\" id=\"close-task-panel\" onClick={closeTaskWrapper}>Close</span>\n                                                    <span className=\"btn btn-success ml-3 add-new-task-btn\" id=\"add-task\" onClick={addNewTask}>Add Task</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"notification-popup hide\">\n                                        <p><span className=\"task\"></span><span className=\"notification-text\"></span></p>\n                                    </div>\n                                </div>\n                                {/* <!-- HTML Template for tasks--> */}\n                                <script id=\"task-template\" type=\"tect/template\">\n                                    <li className=\"task\">\n                                        <div className=\"task-container\">\n                                            <h4 className=\"task-label\">HEllo</h4>\n                                            <span className=\"task-action-btn\">\n                                                <span className=\"action-box large delete-btn\" title=\"Delete Task\">\n                                                    <i className=\"icon\"><i className=\"icon-trash\"></i></i>\n                                                </span>\n                                                <span className=\"action-box large complete-btn\" title=\"Mark Complete\">\n                                                    <i className=\"icon\"><i className=\"icon-check\"></i></i>\n                                                </span>\n                                            </span>\n                                        </div>\n                                    </li>\n                                </script>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}