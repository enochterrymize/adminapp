{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component,Fragment}from'react';import Breadcrumb from'../common/breadcrumb';import ReactCrop from\"react-image-crop\";import\"react-image-crop/dist/ReactCrop.css\";var imageCropper=/*#__PURE__*/function(_Component){_inherits(imageCropper,_Component);function imageCropper(props){var _this;_classCallCheck(this,imageCropper);_this=_possibleConstructorReturn(this,_getPrototypeOf(imageCropper).call(this,props));_this.onSelectFile=function(e){if(e.target.files&&e.target.files.length>0){var reader=new FileReader();reader.addEventListener(\"load\",function(){return _this.setState({src:reader.result});});reader.readAsDataURL(e.target.files[0]);}};_this.onImageLoaded=function(image){_this.imageRef=image;};_this.onVideoLoaded=function(video){_this.videoRef=video;};_this.onCropComplete=function(crop){_this.makeClientCrop(crop);};_this.onCropChange=function(crop,percentCrop){// You could also use percentCrop:\n_this.setState({crop:crop});};_this.state={src:null,crop:{unit:\"%\",width:50,height:50,aspect:16/9}};return _this;}_createClass(imageCropper,[{key:\"makeClientCrop\",value:function(){var _makeClientCrop=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(crop){var croppedImageUrl,croppedVideoUrl;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(this.imageRef&&crop.width&&crop.height)){_context.next=7;break;}_context.next=3;return this.getCroppedImg(this.imageRef,crop,\"newFile.jpeg\");case 3:croppedImageUrl=_context.sent;this.setState({croppedImageUrl:croppedImageUrl});_context.next=12;break;case 7:if(!(this.videoRef&&crop.width&&crop.height)){_context.next=12;break;}_context.next=10;return this.getCroppedVid(this.videoRef,crop,\"mp4\");case 10:croppedVideoUrl=_context.sent;this.setState({croppedVideoUrl:croppedVideoUrl});case 12:case\"end\":return _context.stop();}}},_callee,this);}));function makeClientCrop(_x){return _makeClientCrop.apply(this,arguments);}return makeClientCrop;}()},{key:\"getCroppedVid\",value:function getCroppedVid(video,crop,fileName){var _this2=this;var canvas=document.createElement(\"canvas\");var scaleX=video.naturalWidth/video.width;var scaleY=video.naturalHeight/video.height;canvas.width=crop.width;canvas.height=crop.height;var ctx=canvas.getContext(\"2d\");ctx.drawImage(video,crop.x*scaleX,crop.y*scaleY,crop.width*scaleX,crop.height*scaleY,0,0,crop.width,crop.height);return new Promise(function(resolve,reject){canvas.toBlob(function(blob){if(!blob){return;}blob.name=fileName;window.URL.revokeObjectURL(_this2.fileUrl);_this2.fileUrl=window.URL.createObjectURL(blob);resolve(_this2.fileUrl);},\"video/mp4\");});}},{key:\"getCroppedImg\",value:function getCroppedImg(image,crop,fileName){var _this3=this;var canvas=document.createElement(\"canvas\");var scaleX=image.naturalWidth/image.width;var scaleY=image.naturalHeight/image.height;canvas.width=crop.width;canvas.height=crop.height;var ctx=canvas.getContext(\"2d\");ctx.drawImage(image,crop.x*scaleX,crop.y*scaleY,crop.width*scaleX,crop.height*scaleY,0,0,crop.width,crop.height);return new Promise(function(resolve,reject){canvas.toBlob(function(blob){if(!blob){//reject(new Error('Canvas is empty'));\nreturn;}blob.name=fileName;window.URL.revokeObjectURL(_this3.fileUrl);_this3.fileUrl=window.URL.createObjectURL(blob);resolve(_this3.fileUrl);},\"image/jpeg\");});}},{key:\"render\",value:function render(){var _this$state=this.state,crop=_this$state.crop,croppedImageUrl=_this$state.croppedImageUrl,croppedVideoUrl=_this$state.croppedVideoUrl,src=_this$state.src;return React.createElement(Fragment,null,React.createElement(Breadcrumb,{title:\"Image Cropper\",parent:\"Advance\"}),React.createElement(\"div\",{className:\"container-fluid\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"Image Cropper\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(\"div\",{className:\"input-cropper\"},React.createElement(\"input\",{type:\"file\",onChange:this.onSelectFile})),src&&React.createElement(ReactCrop,{src:src,crop:crop,onImageLoaded:this.onImageLoaded,onComplete:this.onCropComplete,onChange:this.onCropChange}),croppedImageUrl&&React.createElement(\"img\",{alt:\"Crop\",style:{maxWidth:\"100%\"},src:croppedImageUrl,className:\"crop-portion\"}),croppedVideoUrl&&React.createElement(\"video\",{controls:true,width:\"250\"},React.createElement(\"source\",{src:croppedVideoUrl,type:\"video/mp4\"}))))));}}]);return imageCropper;}(Component);export default imageCropper;","map":{"version":3,"sources":["/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/src/components/advance/imageCropper.js"],"names":["React","Component","Fragment","Breadcrumb","ReactCrop","imageCropper","props","onSelectFile","e","target","files","length","reader","FileReader","addEventListener","setState","src","result","readAsDataURL","onImageLoaded","image","imageRef","onVideoLoaded","video","videoRef","onCropComplete","crop","makeClientCrop","onCropChange","percentCrop","state","unit","width","height","aspect","getCroppedImg","croppedImageUrl","getCroppedVid","croppedVideoUrl","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","name","window","URL","revokeObjectURL","fileUrl","createObjectURL","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport Breadcrumb from '../common/breadcrumb';\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\n\nclass imageCropper extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            src: null,\n            crop: {\n                unit: \"%\",\n                width: 50,\n                height: 50,\n                aspect: 16 / 9\n            }\n        }\n    }\n\n    onSelectFile = e => {\n        if (e.target.files && e.target.files.length > 0) {\n            const reader = new FileReader();\n            reader.addEventListener(\"load\", () =>\n                this.setState({ src: reader.result })\n            );\n            reader.readAsDataURL(e.target.files[0]);\n        }\n    };\n\n    // If you setState the crop in here you should return false.\n    onImageLoaded = image => {\n        this.imageRef = image;\n    };\n\n    onVideoLoaded = video => {\n        this.videoRef = video;\n    }\n\n    onCropComplete = crop => {\n        this.makeClientCrop(crop);\n    };\n\n    onCropChange = (crop, percentCrop) => {\n        // You could also use percentCrop:\n        this.setState({ crop });\n    };\n\n    async makeClientCrop(crop) {\n        if (this.imageRef && crop.width && crop.height) {\n            const croppedImageUrl = await this.getCroppedImg(\n                this.imageRef,\n                crop,\n                \"newFile.jpeg\"\n            );\n            this.setState({ croppedImageUrl });\n        } else if (this.videoRef && crop.width && crop.height) {\n            const croppedVideoUrl = await this.getCroppedVid(\n                this.videoRef,\n                crop,\n                \"mp4\"\n            );\n            this.setState({ croppedVideoUrl });\n        }\n    }\n\n    getCroppedVid(video, crop, fileName) {\n        const canvas = document.createElement(\"canvas\");\n        const scaleX = video.naturalWidth / video.width;\n        const scaleY = video.naturalHeight / video.height;\n        canvas.width = crop.width;\n        canvas.height = crop.height;\n        const ctx = canvas.getContext(\"2d\");\n\n        ctx.drawImage(\n            video,\n            crop.x * scaleX,\n            crop.y * scaleY,\n            crop.width * scaleX,\n            crop.height * scaleY,\n            0,\n            0,\n            crop.width,\n            crop.height\n        );\n\n        return new Promise((resolve, reject) => {\n            canvas.toBlob(blob => {\n                if (!blob) {\n                    return;\n                }\n                blob.name = fileName;\n                window.URL.revokeObjectURL(this.fileUrl);\n                this.fileUrl = window.URL.createObjectURL(blob);\n                resolve(this.fileUrl);\n            }, \"video/mp4\");\n        });\n    }\n\n    getCroppedImg(image, crop, fileName) {\n        const canvas = document.createElement(\"canvas\");\n        const scaleX = image.naturalWidth / image.width;\n        const scaleY = image.naturalHeight / image.height;\n        canvas.width = crop.width;\n        canvas.height = crop.height;\n        const ctx = canvas.getContext(\"2d\");\n\n        ctx.drawImage(\n            image,\n            crop.x * scaleX,\n            crop.y * scaleY,\n            crop.width * scaleX,\n            crop.height * scaleY,\n            0,\n            0,\n            crop.width,\n            crop.height\n        );\n\n        return new Promise((resolve, reject) => {\n            canvas.toBlob(blob => {\n                if (!blob) {\n                    //reject(new Error('Canvas is empty'));\n                    return;\n                }\n                blob.name = fileName;\n                window.URL.revokeObjectURL(this.fileUrl);\n                this.fileUrl = window.URL.createObjectURL(blob);\n                resolve(this.fileUrl);\n            }, \"image/jpeg\");\n        });\n    }\n\n    render() {\n        const { crop, croppedImageUrl, croppedVideoUrl, src } = this.state;\n\n\n        return (\n\n            <Fragment>\n                <Breadcrumb title=\"Image Cropper\" parent=\"Advance\" />\n\n                <div className=\"container-fluid\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h5>Image Cropper</h5>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"input-cropper\">\n                                <input type=\"file\" onChange={this.onSelectFile} />\n                            </div>\n                            {src && (\n                                <ReactCrop\n                                    src={src}\n                                    crop={crop}\n                                    onImageLoaded={this.onImageLoaded}\n                                    onComplete={this.onCropComplete}\n                                    onChange={this.onCropChange}\n                                />\n                            )}\n                            {croppedImageUrl && (\n                                <img alt=\"Crop\" style={{ maxWidth: \"100%\" }} src={croppedImageUrl} className=\"crop-portion\" />\n                            )}\n\n                            {croppedVideoUrl && (\n                                <video controls width=\"250\">\n                                    <source src={croppedVideoUrl} type=\"video/mp4\" />\n                                </video>\n                            )}\n                        </div>\n                    </div>\n                </div>\n\n            </Fragment>\n        );\n    }\n}\n\nexport default imageCropper;"]},"metadata":{},"sourceType":"module"}