{"ast":null,"code":"import{createStore,applyMiddleware,compose}from'redux';// middlewares\nimport thunkMiddleware from'redux-thunk';// import logger from 'redux-logger'\n// Import custom components\nimport reducers from'../reducers/index';function saveToLocalStorage(state){try{var serializedState=JSON.stringify(state);localStorage.setItem('state',serializedState);}catch(e){return undefined;}}/**\n * Create a Redux store that holds the app state.\n */var store=createStore(reducers,compose(applyMiddleware(thunkMiddleware),//For working redux dev tools in chrome (https://github.com/zalmoxisus/redux-devtools-extension)\nwindow.devToolsExtension?window.devToolsExtension():function(f){return f;}));// eslint-disable-next-line\nvar unsubscribe=store.subscribe(function(){var state=store.getState();saveToLocalStorage(state);});export default store;","map":{"version":3,"sources":["/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/src/store/index.jsx"],"names":["createStore","applyMiddleware","compose","thunkMiddleware","reducers","saveToLocalStorage","state","serializedState","JSON","stringify","localStorage","setItem","e","undefined","store","window","devToolsExtension","f","unsubscribe","subscribe","getState"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,OAAvC,KAAsD,OAAtD,CAEA;AACA,MAAOC,CAAAA,eAAP,KAA4B,aAA5B,CACA;AAEA;AACA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CAGA,QAASC,CAAAA,kBAAT,CAA4BC,KAA5B,CAAmC,CAC/B,GAAI,CACA,GAAMC,CAAAA,eAAe,CAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB,CACAI,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BJ,eAA9B,EACH,OAAMK,CAAN,CAAQ,CACL,MAAOC,CAAAA,SAAP,CACH,CACJ,CAED;;GAGA,GAAMC,CAAAA,KAAK,CAAGd,WAAW,CAACI,QAAD,CAAaF,OAAO,CACzCD,eAAe,CAACE,eAAD,CAD0B,CAGzC;AACAY,MAAM,CAACC,iBAAP,CAA2BD,MAAM,CAACC,iBAAP,EAA3B,CAAwD,SAAUC,CAAV,CAAa,CACjE,MAAOA,CAAAA,CAAP,CACH,CANwC,CAApB,CAAzB,CAQA;AACA,GAAMC,CAAAA,WAAW,CAAGJ,KAAK,CAACK,SAAN,CAAgB,UAAM,CACtC,GAAMb,CAAAA,KAAK,CAAGQ,KAAK,CAACM,QAAN,EAAd,CACAf,kBAAkB,CAACC,KAAD,CAAlB,CACH,CAHmB,CAApB,CAMA,cAAeQ,CAAAA,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\n\n// middlewares\nimport thunkMiddleware from 'redux-thunk'\n// import logger from 'redux-logger'\n\n// Import custom components\nimport reducers from '../reducers/index';\n\n\nfunction saveToLocalStorage(state) {\n    try {\n        const serializedState = JSON.stringify(state)\n        localStorage.setItem('state', serializedState)\n    }catch(e){\n        return undefined\n    }\n}\n\n/**\n * Create a Redux store that holds the app state.\n */\nconst store = createStore(reducers,   compose(\n    applyMiddleware(thunkMiddleware),\n\n    //For working redux dev tools in chrome (https://github.com/zalmoxisus/redux-devtools-extension)\n    window.devToolsExtension ? window.devToolsExtension() : function (f) {\n        return f;\n    }\n));\n// eslint-disable-next-line\nconst unsubscribe = store.subscribe(() => {\n    const state = store.getState();\n    saveToLocalStorage(state);\n});\n\n\nexport default store;"]},"metadata":{},"sourceType":"module"}