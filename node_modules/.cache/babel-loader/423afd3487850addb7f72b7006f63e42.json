{"ast":null,"code":"import _defineProperty from\"/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{GET_MEMBERS,GET_MEMBERS_SUCCESS,GET_CHATS,GET_CHATS_SUCCESS,SEARCH_MEMBER,CHANGE_CHAT,CREATE_CHAT,SEND_MESSAGE,UPDATE_STATUS,UPDATE_SELECTED_USER,REPLY_BY_SELECTED_USER}from'../constant/actionTypes';import contactsData from'../data/chat/chatMember';import chatsData from\"../data/chat/chat.chats.json\";var initial_state={allMembers:null,members:null,chats:chatsData,error:'',searchKeyword:'',loading:false,currentUser:null,selectedUser:null,online:true,updateSelectedUser:null};export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initial_state;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_MEMBERS:return _objectSpread({},state,{loading:true});case GET_MEMBERS_SUCCESS:var members=contactsData;var currentUser=members[0];return _objectSpread({},state,{loading:false,allMembers:members,members:members,currentUser:currentUser});case GET_CHATS:return _objectSpread({},state,{loading:true});case GET_CHATS_SUCCESS:return _objectSpread({},state,{loading:false,chats:action.payload.chats,selectedUser:state.allMembers.find(function(x){return x.id===action.payload.selectedUser;})});case UPDATE_SELECTED_USER:return _objectSpread({},state,{updateSelectedUser:state.allMembers.find(function(x){return x.id===action.payload.selectedUser;})});case CHANGE_CHAT:return _objectSpread({},state,{selectedUser:state.allMembers.find(function(x){return x.id===action.payload;})});case SEARCH_MEMBER:if(action.payload===''){return _objectSpread({},state,{members:state.allMembers});}else{var keyword=action.payload.toLowerCase();var searchedMembers=state.allMembers.filter(function(member){return member.name.toLowerCase().indexOf(keyword)>-1;});return _objectSpread({},state,{members:searchedMembers});}case SEND_MESSAGE:return _objectSpread({},state);case REPLY_BY_SELECTED_USER:return _objectSpread({},state);case CREATE_CHAT:return _objectSpread({},state);case UPDATE_STATUS:return _objectSpread({},state,{currentUser:_objectSpread({},state.currentUser,{status:action.payload})});default:return _objectSpread({},state);}});","map":{"version":3,"sources":["/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/src/reducers/chat.reducer.js"],"names":["GET_MEMBERS","GET_MEMBERS_SUCCESS","GET_CHATS","GET_CHATS_SUCCESS","SEARCH_MEMBER","CHANGE_CHAT","CREATE_CHAT","SEND_MESSAGE","UPDATE_STATUS","UPDATE_SELECTED_USER","REPLY_BY_SELECTED_USER","contactsData","chatsData","initial_state","allMembers","members","chats","error","searchKeyword","loading","currentUser","selectedUser","online","updateSelectedUser","state","action","type","payload","find","x","id","keyword","toLowerCase","searchedMembers","filter","member","name","indexOf","status"],"mappings":"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","sourcesContent":["import {\n    GET_MEMBERS,\n    GET_MEMBERS_SUCCESS,\n    GET_CHATS,\n    GET_CHATS_SUCCESS,\n    SEARCH_MEMBER,\n    CHANGE_CHAT,\n    CREATE_CHAT,\n    SEND_MESSAGE,\n    UPDATE_STATUS,\n    UPDATE_SELECTED_USER,\n    REPLY_BY_SELECTED_USER\n} from '../constant/actionTypes';\n\nimport contactsData from '../data/chat/chatMember'\nimport chatsData from \"../data/chat/chat.chats.json\";\n\nconst initial_state = {\n    allMembers: null,\n    members: null,\n    chats: chatsData,\n    error: '',\n    searchKeyword: '',\n    loading: false,\n    currentUser: null,\n    selectedUser: null,\n    online: true,\n    updateSelectedUser: null\n};\n\nexport default (state = initial_state, action) => {\n    switch (action.type) {\n\n        case GET_MEMBERS:\n            return { ...state, loading: true };\n\n        case GET_MEMBERS_SUCCESS:\n            const members = contactsData;\n            const currentUser = members[0];\n            return { ...state, loading: false, allMembers: members, members: members, currentUser: currentUser };\n\n        case GET_CHATS:\n            return { ...state, loading: true };\n\n        case GET_CHATS_SUCCESS:\n            return { ...state, loading: false, chats: action.payload.chats, selectedUser: state.allMembers.find(x => x.id === action.payload.selectedUser) };\n\n        case UPDATE_SELECTED_USER:\n            return { ...state, updateSelectedUser: state.allMembers.find(x => x.id === action.payload.selectedUser) }\n\n        case CHANGE_CHAT:\n            return { ...state, selectedUser: state.allMembers.find(x => x.id === action.payload) };\n\n        case SEARCH_MEMBER:\n            if (action.payload === '') {\n                return { ...state, members: state.allMembers };\n            } else {\n                const keyword = action.payload.toLowerCase();\n                const searchedMembers = state.allMembers.filter((member) => member.name.toLowerCase().indexOf(keyword) > -1);\n                return { ...state, members: searchedMembers }\n            }\n\n        case SEND_MESSAGE:\n            return { ...state };\n\n        case REPLY_BY_SELECTED_USER:\n            return { ...state };\n\n        case CREATE_CHAT:\n            return { ...state };\n\n        case UPDATE_STATUS:\n            return { ...state, currentUser: { ...state.currentUser, status: action.payload } };\n\n        default: return { ...state };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}