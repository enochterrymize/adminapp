{"ast":null,"code":"import React,{Fragment}from'react';import Breadcrumb from'../../common/breadcrumb';import dragula from'react-dragula';var DragNDropComp=function DragNDropComp(){var dragulaDecorator=function dragulaDecorator(componentBackingInstance){if(componentBackingInstance){var options={};dragula([componentBackingInstance],options);}};var dragulaDecoratorSpill=function dragulaDecoratorSpill(componentBackingInstance){if(componentBackingInstance){var options={isContainer:function isContainer(el){return false;},moves:function moves(el,source,handle,sibling){return true;},accepts:function accepts(el,target,source,sibling){return true;},invalid:function invalid(el,handle){return false;},direction:'vertical',copy:false,copySortSource:false,revertOnSpill:true,removeOnSpill:true,mirrorContainer:document.body,ignoreInputTextSelection:true};dragula([componentBackingInstance],options);}};var dragulaDecoratorRight=function dragulaDecoratorRight(componentBackingInstance){if(componentBackingInstance){var options={copyItem:function copyItem(el,target,source,sibling){return sibling.id==='left';},accepts:function accepts(el,target,source,sibling){// To avoid dragging from right to left container\nreturn target.id==='left';},copy:true,copySortSource:true,removeOnSpill:false,mirrorContainer:document.getElementById('right')};dragula([componentBackingInstance],options);}};return React.createElement(Fragment,null,React.createElement(Breadcrumb,{title:\"Drag-N-Drop\",parent:\"Advance\"}),React.createElement(\"div\",{className:\"container-fluid\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"Click And Drag\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(\"div\",{className:\"row ui-sortable small-drag\",id:\"draggableMultiple\"},React.createElement(\"div\",{className:\"col-sm-12\"},React.createElement(\"div\",{className:\"container\",ref:dragulaDecorator},React.createElement(\"div\",null,\"You can move these elements between these two containers\"),React.createElement(\"div\",null,\"Moving them anywhere else isn't quite possible\"),React.createElement(\"div\",null,\"There's also the possibility of moving elements around in the same container, changing their position\"),React.createElement(\"div\",null,\"This is the default use case. You only need to specify the containers you want to use\"),React.createElement(\"div\",null,\"More interactive use cases lie ahead\"),React.createElement(\"div\",null,\"Make sure to check out the documentation on GitHub!\")))))),React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"Spill Drag N Drop\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(\"div\",{className:\"row ui-sortable\",id:\"draggableMultiple\"},React.createElement(\"div\",{className:\"col-sm-12\"},React.createElement(\"div\",{className:\"container\",ref:dragulaDecoratorSpill},React.createElement(\"div\",null,\"You can move these elements between these two containers\"),React.createElement(\"div\",null,\"Moving them anywhere else isn't quite possible\"),React.createElement(\"div\",null,\"There's also the possibility of moving elements around in the same container, changing their position\"),React.createElement(\"div\",null,\"This is the default use case. You only need to specify the containers you want to use\"),React.createElement(\"div\",null,\"You can move these elements between these two containers\"),React.createElement(\"div\",null,\"Moving them anywhere else isn't quite possible\"),React.createElement(\"div\",null,\"Make sure to check out the documentation on GitHub!\")))))),React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"Copy Drag N Drop\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(\"div\",{className:\"row ui-sortable\",id:\"draggableMultiple\"},React.createElement(\"div\",{className:\"col-sm-12\"},React.createElement(\"div\",{className:\"container\",id:\"right\",ref:dragulaDecoratorRight},React.createElement(\"div\",null,\"There's also the possibility of moving elements around in the same container, changing their position\"),React.createElement(\"div\",null,\"This is the default use case. You only need to specify the containers you want to use\"),React.createElement(\"div\",null,\"You can move these elements between these two containers\"))))))));};export default DragNDropComp;","map":{"version":3,"sources":["/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/src/components/advance/drag-n-drop/dragNDropComp.js"],"names":["React","Fragment","Breadcrumb","dragula","DragNDropComp","dragulaDecorator","componentBackingInstance","options","dragulaDecoratorSpill","isContainer","el","moves","source","handle","sibling","accepts","target","invalid","direction","copy","copySortSource","revertOnSpill","removeOnSpill","mirrorContainer","document","body","ignoreInputTextSelection","dragulaDecoratorRight","copyItem","id","getElementById"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport Breadcrumb from '../../common/breadcrumb';\n\nimport dragula from 'react-dragula';\n\nconst DragNDropComp = () => {\n\n  const dragulaDecorator = (componentBackingInstance) => {\n    if (componentBackingInstance) {\n      let options = {};\n      dragula([componentBackingInstance], options);\n    }\n  };\n\n  const dragulaDecoratorSpill = (componentBackingInstance) => {\n    if (componentBackingInstance) {\n      let options = {\n        isContainer: function (el) { return false; },\n        moves: function (el, source, handle, sibling) { return true; },\n        accepts: function (el, target, source, sibling) { return true; },\n        invalid: function (el, handle) { return false; },\n        direction: 'vertical',\n        copy: false,\n        copySortSource: false,\n        revertOnSpill: true,\n        removeOnSpill: true,\n        mirrorContainer: document.body,\n        ignoreInputTextSelection: true\n      };\n      dragula([componentBackingInstance], options);\n    }\n  };\n\n\n  const dragulaDecoratorRight = (componentBackingInstance) => {\n    if (componentBackingInstance) {\n      let options = {\n        copyItem: (el, target, source, sibling) => {\n          return sibling.id === 'left';\n        },\n        accepts: (el, target, source, sibling) => {\n          // To avoid dragging from right to left container\n          return target.id === 'left';\n        },\n        copy: true,\n        copySortSource: true,\n        removeOnSpill: false,\n        mirrorContainer: document.getElementById('right'),\n      };\n      dragula([componentBackingInstance], options);\n    }\n  };\n\n\n\n  return (\n    <Fragment>\n      <Breadcrumb title=\"Drag-N-Drop\" parent=\"Advance\" />\n      <div className=\"container-fluid\">\n\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h5>Click And Drag</h5>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"row ui-sortable small-drag\" id=\"draggableMultiple\">\n              <div className=\"col-sm-12\">\n                <div className='container' ref={dragulaDecorator}>\n                  <div>You can move these elements between these two containers</div>\n                  <div>Moving them anywhere else isn't quite possible</div>\n                  <div>There's also the possibility of moving elements around in the same container, changing their position</div>\n                  <div>This is the default use case. You only need to specify the containers you want to use</div>\n                  <div>More interactive use cases lie ahead</div>\n                  <div>Make sure to check out the documentation on GitHub!</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* 2nd draggable */}\n\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h5>Spill Drag N Drop</h5>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"row ui-sortable\" id=\"draggableMultiple\">\n              <div className=\"col-sm-12\">\n                <div className='container' ref={dragulaDecoratorSpill}>\n                  <div>You can move these elements between these two containers</div>\n                  <div>Moving them anywhere else isn't quite possible</div>\n                  <div>There's also the possibility of moving elements around in the same container, changing their position</div>\n                  <div>This is the default use case. You only need to specify the containers you want to use</div>\n                  <div>You can move these elements between these two containers</div>\n                  <div>Moving them anywhere else isn't quite possible</div>\n                  <div>Make sure to check out the documentation on GitHub!</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* 3d drag and drop */}\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h5>Copy Drag N Drop</h5>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"row ui-sortable\" id=\"draggableMultiple\">\n              <div className=\"col-sm-12\">\n                <div className='container' id=\"right\" ref={dragulaDecoratorRight}>\n                  <div>There's also the possibility of moving elements around in the same container, changing their position</div>\n                  <div>This is the default use case. You only need to specify the containers you want to use</div>\n                  <div>You can move these elements between these two containers</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default DragNDropComp;"]},"metadata":{},"sourceType":"module"}