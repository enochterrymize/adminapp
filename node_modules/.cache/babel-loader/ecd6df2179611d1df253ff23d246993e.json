{"ast":null,"code":"import{GET_MEMBERS,GET_MEMBERS_SUCCESS,GET_CHATS,GET_CHATS_SUCCESS,GET_CHATS_ERROR,CHANGE_CHAT,CREATE_CHAT,SEARCH_MEMBER,SEND_MESSAGE,UPDATE_STATUS,UPDATE_SELECTED_USER,REPLY_BY_SELECTED_USER}from'../constant/actionTypes';import contactsData from\"../data/chat/chatMember.js\";import chatsData from\"../data/chat/chat.chats.json\";export var getMembers=function getMembers(){return{type:GET_MEMBERS};};export var getMembersSuccess=function getMembersSuccess(members,currentUser){return{type:GET_MEMBERS_SUCCESS,payload:{members:members,currentUser:currentUser}};};export var getAllMembers=function getAllMembers(){return function(dispatch){dispatch(getMembers());var members=contactsData;var currentUser=members[0];dispatch(getMembersSuccess(members,currentUser));};};export var beginChats=function beginChats(userId){return{type:GET_CHATS,payload:userId};};export var getChatsSuccess=function getChatsSuccess(chats,selectedUser,online){return{type:GET_CHATS_SUCCESS,payload:{chats:chats,selectedUser:selectedUser,online:online}};};export var getchatsError=function getchatsError(error){return{type:GET_CHATS_ERROR,payload:error};};export var getAllChats=function getAllChats(userId){return function(dispatch){dispatch(beginChats());var chats=chatsData.data;chats=chats.filter(function(x){return x.users.includes(userId);});var selectedUser=chats[0].users.find(function(x){return x!==userId;});var online=true;dispatch(getChatsSuccess(chats,selectedUser,online));dispatch(updateSelectedUser(selectedUser,online));};};export var changeChat=function changeChat(userId){return{type:CHANGE_CHAT,payload:userId};};export var searchMember=function searchMember(keyword){return{type:SEARCH_MEMBER,payload:keyword};};export var updateSelectedUser=function updateSelectedUser(selectedUser,online){return{type:UPDATE_SELECTED_USER,payload:{selectedUser:selectedUser,online:online}};};export var sendMessageToChat=function sendMessageToChat(currentUserId,selectedUserId,message,allchats,online){return{type:SEND_MESSAGE,payload:{currentUserId:currentUserId,selectedUserId:selectedUserId,message:message,allchats:allchats,online:online}};};export var replyMessageToChat=function replyMessageToChat(currentUserId,selectedUserId,message,allchats,online){return{type:REPLY_BY_SELECTED_USER,payload:{currentUserId:currentUserId,selectedUserId:selectedUserId,message:message,allchats:allchats,online:online}};};export var sendMessage=function sendMessage(currentUserId,selectedUserId,message,allChats,online){return function(dispatch){dispatch(sendMessageToChat(currentUserId,selectedUserId,message,allChats,online));var chat=allChats.find(function(x){return x.users.includes(currentUserId)&&x.users.includes(selectedUserId);});var now=new Date();var time=now.getHours()+\":\"+now.getMinutes();var status=online;if(chat){chat.messages.push({sender:currentUserId,time:time,text:message,status:true});chat.lastMessageTime=time;chat.online=status;var chats=allChats.filter(function(x){return x.id!==chat.id;});chats.splice(0,0,chat);dispatch(getChatsSuccess(chats,selectedUserId,online));}};};export var replyByUser=function replyByUser(currentUserId,selectedUserId,message,allChats,online){return function(dispatch){dispatch(replyMessageToChat(currentUserId,selectedUserId,message,allChats,online));var chat=allChats.find(function(x){return x.users.includes(currentUserId)&&x.users.includes(selectedUserId);});var now=new Date();var time=now.getHours()+\":\"+now.getMinutes();var status=online;if(chat){chat.messages.push({sender:selectedUserId,time:time,text:message,status:true});chat.lastMessageTime=time;chat.online=status;var chats=allChats.filter(function(x){return x.id!==chat.id;});chats.splice(0,0,chat);dispatch(getChatsSuccess(chats,selectedUserId,online));}};};export var createChat=function createChat(currentUserId,selectedUserId,allChats){return{type:CREATE_CHAT,payload:{currentUserId:currentUserId,selectedUserId:selectedUserId,allChats:allChats}};};export var createNewChat=function createNewChat(currentUserId,selectedUserId,allChats){return function(dispatch){dispatch(createChat(currentUserId,selectedUserId,allChats));var conversation={id:allChats.length+1,users:[currentUserId,selectedUserId],lastMessageTime:\"-\",messages:[]};allChats.splice(0,0,conversation);dispatch(getChatsSuccess(allChats,selectedUserId));};};export var CurrentUserUpdateStatus=function CurrentUserUpdateStatus(currentStatus){return{type:UPDATE_STATUS,payload:currentStatus};};","map":{"version":3,"sources":["/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/src/actions/chat.action.js"],"names":["GET_MEMBERS","GET_MEMBERS_SUCCESS","GET_CHATS","GET_CHATS_SUCCESS","GET_CHATS_ERROR","CHANGE_CHAT","CREATE_CHAT","SEARCH_MEMBER","SEND_MESSAGE","UPDATE_STATUS","UPDATE_SELECTED_USER","REPLY_BY_SELECTED_USER","contactsData","chatsData","getMembers","type","getMembersSuccess","members","currentUser","payload","getAllMembers","dispatch","beginChats","userId","getChatsSuccess","chats","selectedUser","online","getchatsError","error","getAllChats","data","filter","x","users","includes","find","updateSelectedUser","changeChat","searchMember","keyword","sendMessageToChat","currentUserId","selectedUserId","message","allchats","replyMessageToChat","sendMessage","allChats","chat","now","Date","time","getHours","getMinutes","status","messages","push","sender","text","lastMessageTime","id","splice","replyByUser","createChat","createNewChat","conversation","length","CurrentUserUpdateStatus","currentStatus"],"mappings":"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","sourcesContent":["\nimport {\n    GET_MEMBERS,\n    GET_MEMBERS_SUCCESS,\n    GET_CHATS,\n    GET_CHATS_SUCCESS,\n    GET_CHATS_ERROR,\n    CHANGE_CHAT,\n    CREATE_CHAT,\n    SEARCH_MEMBER,\n    SEND_MESSAGE,\n    UPDATE_STATUS,\n    UPDATE_SELECTED_USER,\n    REPLY_BY_SELECTED_USER\n} from '../constant/actionTypes';\n\n\nimport contactsData from \"../data/chat/chatMember.js\";\nimport chatsData from \"../data/chat/chat.chats.json\";\n\n\n\nexport const getMembers = () => ({\n    type: GET_MEMBERS\n});\n\nexport const getMembersSuccess = (members, currentUser) => {\n    return ({\n        type: GET_MEMBERS_SUCCESS,\n        payload: { members, currentUser }\n    })\n};\n\nexport const getAllMembers = () => dispatch => {\n    dispatch(getMembers());\n    const members = contactsData;\n    const currentUser = members[0];\n    dispatch(getMembersSuccess(members, currentUser));\n};\n\n\nexport const beginChats = (userId) => ({\n    type: GET_CHATS,\n    payload:  userId\n});\nexport const getChatsSuccess = (chats, selectedUser,online) => ({\n    type: GET_CHATS_SUCCESS,\n    payload: { chats, selectedUser,online }\n});\n\nexport const getchatsError = (error) => ({\n    type: GET_CHATS_ERROR,\n    payload: error\n});\n\nexport const getAllChats = (userId) => dispatch => {\n    dispatch(beginChats());\n    let chats = chatsData.data;\n    chats = chats.filter(x => x.users.includes(userId));\n\n    const selectedUser = chats[0].users.find(x => x !== userId);\n    const online = true;\n    dispatch(getChatsSuccess(chats, selectedUser,online));\n    dispatch(updateSelectedUser( selectedUser,online));\n}\n\nexport const changeChat = (userId) => ({\n    type: CHANGE_CHAT,\n    payload: userId\n});\n\nexport const searchMember = (keyword) => ({\n    type: SEARCH_MEMBER,\n    payload: keyword\n});\n\nexport const updateSelectedUser = (selectedUser,online) => ({\n    type:UPDATE_SELECTED_USER,\n    payload:{selectedUser,online}\n})\n\nexport const sendMessageToChat = (currentUserId,selectedUserId,message,allchats,online) => ({\n    type: SEND_MESSAGE,\n    payload: {currentUserId,selectedUserId,message,allchats,online}\n});\n\nexport const replyMessageToChat = (currentUserId,selectedUserId,message,allchats,online) => ({\n    type: REPLY_BY_SELECTED_USER,\n    payload: {currentUserId,selectedUserId,message,allchats,online}\n});\n\nexport const sendMessage = (currentUserId,selectedUserId,message,allChats,online) => dispatch => {\n\n    dispatch(sendMessageToChat(currentUserId,selectedUserId,message,allChats,online));\n    let chat = allChats.find(x => x.users.includes(currentUserId) && x.users.includes(selectedUserId))\n    const now = new Date();\n    const time =  now.getHours() + \":\" + now.getMinutes();\n    const status=online\n    if (chat) {\n        chat.messages.push({\n            sender: currentUserId,\n            time: time,\n            text: message,\n            status:true\n        });\n        chat.lastMessageTime = time;\n        chat.online = status;\n        \n        let chats = (allChats.filter(x => x.id !== chat.id));\n        chats.splice(0, 0, chat)\n\n        dispatch(getChatsSuccess(chats,selectedUserId,online));\n    }\n}\n\nexport const replyByUser = (currentUserId,selectedUserId,message,allChats,online) => dispatch => {\n\n    dispatch(replyMessageToChat(currentUserId,selectedUserId,message,allChats,online));\n    let chat = allChats.find(x => x.users.includes(currentUserId) && x.users.includes(selectedUserId))\n    const now = new Date();\n    const time =  now.getHours() + \":\" + now.getMinutes();\n    const status= online\n    if (chat) {\n        chat.messages.push({\n            sender: selectedUserId,\n            time: time,\n            text: message,\n            status:true\n        });\n        chat.lastMessageTime = time;\n        chat.online = status;\n        let chats = (allChats.filter(x => x.id !== chat.id));\n        chats.splice(0, 0, chat)\n\n        dispatch(getChatsSuccess(chats,selectedUserId,online));\n    }\n}\n\nexport const createChat = (currentUserId,selectedUserId,allChats) => ({\n    type: CREATE_CHAT,\n    payload: {currentUserId,selectedUserId,allChats}\n});\n\nexport const createNewChat = (currentUserId,selectedUserId,allChats) => dispatch => {\n    dispatch(createChat(currentUserId,selectedUserId,allChats));\n\n    let conversation = {\n        id: allChats.length + 1,\n        users: [currentUserId, selectedUserId],\n        lastMessageTime: \"-\",\n        messages: []\n    };\n    allChats.splice(0, 0, conversation)\n\n    dispatch(getChatsSuccess(allChats,selectedUserId));\n}\n\nexport const CurrentUserUpdateStatus = (currentStatus) => ({\n    type: UPDATE_STATUS,\n    payload: currentStatus\n});\n"]},"metadata":{},"sourceType":"module"}