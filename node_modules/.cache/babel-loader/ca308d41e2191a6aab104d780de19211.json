{"ast":null,"code":"import _defineProperty from\"/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{Fragment,useState,useEffect}from'react';import Breadcrumb from'../../common/breadcrumb';import firebase from'../../../data/base';import{deleteList,creatTodoList,updateTask,markAllTask}from'../../../services/todo-firebase.service';var TodoFirebase=function TodoFirebase(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todoList=_useState2[0],setTodoList=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),addTask=_useState4[0],setAddTask=_useState4[1];var border_danger='';var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),task=_useState6[0],setTask=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),markAll=_useState8[0],setMarkAll=_useState8[1];useEffect(function(){var unsubscribe=firebase.firestore().collection('todo').onSnapshot(function(snapshot){var newItem=snapshot.docs.map(function(doc){return _objectSpread({id:doc.id},doc.data());});setTodoList(newItem);});return function(){return unsubscribe();};},[]);var addNewTask=function addNewTask(){if(task===''){document.querySelector('.ng-valid').classList.remove('border-danger');document.querySelector('.ng-valid').classList.add('border-danger');}else{creatTodoList(task);document.getElementById('newtask').value='';document.querySelector('.ng-valid').classList.add('taskmag-hide');document.querySelector('.ng-valid').classList.remove('taskmag-show');}};var handleRemoveTodo=function handleRemoveTodo(todoId){deleteList(todoId);};var handleMarkedTodo=function handleMarkedTodo(index,todo){todo.completed=!todo.completed;updateTask(todo);};var markAllStatus=function markAllStatus(checked){setMarkAll(checked);markAllTask(checked);};var openTaskWrapper=function openTaskWrapper(){setAddTask(' visible');};var closeTaskWrapper=function closeTaskWrapper(){setAddTask('');};var onTaskChanged=function onTaskChanged(e){setTask(e.currentTarget.value);};return React.createElement(Fragment,null,React.createElement(Breadcrumb,{title:\"To-do Firebase\",parent:\"To-do Firebase\"}),React.createElement(\"div\",{className:\"container-fluid\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col-xl-12\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"To-Do\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(\"div\",{className:\"todo\"},React.createElement(\"div\",{className:\"todo-list-wrapper\"},React.createElement(\"div\",{className:\"todo-list-container\"},React.createElement(\"div\",{className:\"mark-all-tasks\"},React.createElement(\"div\",{className:\"mark-all-tasks-container\"},React.createElement(\"span\",{className:\"mark-all-btn\",id:\"mark-all-finished\",role:\"button\"},React.createElement(\"span\",{className:\"btn-label\"},\"Mark all as finished\"),React.createElement(\"span\",{className:\"action-box completed\",onClick:function onClick(){return markAllStatus(!markAll);}},markAll&&React.createElement(\"i\",{className:\"icon\"},React.createElement(\"i\",{className:\"icon-check\"})))),React.createElement(\"span\",{className:\"mark-all-btn move-down\",id:\"mark-all-incomplete\",role:\"button\"},React.createElement(\"span\",{className:\"btn-label\"},\"Mark all as Incomplete\"),React.createElement(\"span\",{className:\"action-box\"},React.createElement(\"i\",{className:\"icon\"},React.createElement(\"i\",{className:\"icon-check\"})))))),React.createElement(\"div\",{className:\"todo-list-body\"},React.createElement(\"ul\",{id:\"todo-list\"},todoList.length>0?todoList.map(function(todoData,index){return React.createElement(\"li\",{className:\"task \"+(todoData.completed?'completed':''),key:index},React.createElement(\"div\",{className:\"task-container\"},React.createElement(\"h4\",{className:\"task-label\"},todoData.task),React.createElement(\"span\",{className:\"task-action-btn\"},React.createElement(\"span\",{className:\"action-box large delete-btn\",title:\"Delete Task\",onClick:function onClick(){return handleRemoveTodo(todoData.id);}},React.createElement(\"i\",{className:\"icon\"},React.createElement(\"i\",{className:\"icon-trash\"}))),React.createElement(\"span\",{className:\"action-box large complete-btn\",title:\"Mark Complete\",onClick:function onClick(){return handleMarkedTodo(index,todoData);}},React.createElement(\"i\",{className:\"icon\"},React.createElement(\"i\",{className:\"icon-check\"}))))));}):'')),React.createElement(\"div\",{className:\"todo-list-footer\"},React.createElement(\"div\",{className:\"add-task-btn-wrapper\"},React.createElement(\"span\",{className:\"add-task-btn\"},React.createElement(\"button\",{className:\"btn btn-primary\",onClick:openTaskWrapper},React.createElement(\"i\",{className:\"icon-plus\"}),\" Add new task\"))),React.createElement(\"div\",{className:\"new-task-wrapper\"+addTask},React.createElement(\"textarea\",{className:\"ng-untouched ng-pristine ng-valid\"+border_danger,id:\"newtask\",placeholder:\"Enter new task here. . .\",defaultValue:task,onChange:onTaskChanged}),React.createElement(\"span\",{className:\"btn btn-danger cancel-btn\",id:\"close-task-panel\",onClick:closeTaskWrapper},\"Close\"),React.createElement(\"span\",{className:\"btn btn-success ml-3 add-new-task-btn\",id:\"add-task\",onClick:addNewTask},\"Add Task\"))))),React.createElement(\"div\",{className:\"notification-popup hide\"},React.createElement(\"p\",null,React.createElement(\"span\",{className:\"task\"}),React.createElement(\"span\",{className:\"notification-text\"})))),React.createElement(\"script\",{id:\"task-template\",type:\"tect/template\"},React.createElement(\"li\",{className:\"task\"},React.createElement(\"div\",{className:\"task-container\"},React.createElement(\"span\",{className:\"task-action-btn\"},React.createElement(\"span\",{className:\"action-box large delete-btn\",title:\"Delete Task\"},React.createElement(\"i\",{className:\"icon\"},React.createElement(\"i\",{className:\"icon-trash\"}))),React.createElement(\"span\",{className:\"action-box large complete-btn\",title:\"Mark Complete\"},React.createElement(\"i\",{className:\"icon\"},React.createElement(\"i\",{className:\"icon-check\"})))))))))))));};export default TodoFirebase;","map":{"version":3,"sources":["/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/src/components/applications/todo-firebase-app/todo-firebase.js"],"names":["React","Fragment","useState","useEffect","Breadcrumb","firebase","deleteList","creatTodoList","updateTask","markAllTask","TodoFirebase","todoList","setTodoList","addTask","setAddTask","border_danger","task","setTask","markAll","setMarkAll","unsubscribe","firestore","collection","onSnapshot","snapshot","newItem","docs","map","doc","id","data","addNewTask","document","querySelector","classList","remove","add","getElementById","value","handleRemoveTodo","todoId","handleMarkedTodo","index","todo","completed","markAllStatus","checked","openTaskWrapper","closeTaskWrapper","onTaskChanged","e","currentTarget","length","todoData"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport Breadcrumb from '../../common/breadcrumb';\nimport firebase from '../../../data/base';\nimport { deleteList, creatTodoList, updateTask, markAllTask } from '../../../services/todo-firebase.service';\n\nconst TodoFirebase = () => {\n    const [todoList, setTodoList] = useState([]);\n    const [addTask, setAddTask] = useState('');\n    const border_danger = '';\n    const [task, setTask] = useState('');\n    const [markAll, setMarkAll] = useState(false);\n\n    useEffect(() => {\n        const unsubscribe = firebase.firestore().collection('todo').onSnapshot((snapshot) => {\n            const newItem = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data()\n            }))\n            setTodoList(newItem)\n        })\n        return () => unsubscribe();\n    }, []);\n\n    const addNewTask = () => {\n        if (task === '') {\n            document.querySelector('.ng-valid').classList.remove('border-danger')\n            document.querySelector('.ng-valid').classList.add('border-danger')\n        } else {\n            creatTodoList(task);\n            document.getElementById('newtask').value = '';\n            document.querySelector('.ng-valid').classList.add('taskmag-hide')\n            document.querySelector('.ng-valid').classList.remove('taskmag-show')\n        }\n    }\n\n    const handleRemoveTodo = (todoId) => {\n        deleteList(todoId)\n    }\n\n    const handleMarkedTodo = (index, todo) => {\n        todo.completed = !todo.completed;\n        updateTask(todo);\n    }\n\n    const markAllStatus = (checked) => {\n        setMarkAll(checked);\n        markAllTask(checked)\n    }\n\n    const openTaskWrapper = () => {\n        setAddTask(' visible')\n    }\n\n    const closeTaskWrapper = () => {\n        setAddTask('')\n    }\n\n    const onTaskChanged = (e) => {\n        setTask(e.currentTarget.value);\n    }\n\n    return (\n        <Fragment>\n            <Breadcrumb title=\"To-do Firebase\" parent=\"To-do Firebase\" />\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-xl-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>To-Do</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"todo\">\n                                    <div className=\"todo-list-wrapper\">\n                                        <div className=\"todo-list-container\">\n                                            <div className=\"mark-all-tasks\">\n                                                <div className=\"mark-all-tasks-container\">\n                                                    <span className=\"mark-all-btn\" id=\"mark-all-finished\" role=\"button\">\n                                                        <span className=\"btn-label\">Mark all as finished</span>\n                                                        <span className=\"action-box completed\" onClick={() => markAllStatus(!markAll)}>\n                                                            {markAll &&\n                                                                <i className=\"icon\"><i className=\"icon-check\"></i></i>}\n                                                        </span>\n                                                    </span>\n                                                    <span className=\"mark-all-btn move-down\" id=\"mark-all-incomplete\" role=\"button\">\n                                                        <span className=\"btn-label\">Mark all as Incomplete</span>\n                                                        <span className=\"action-box\">\n                                                            <i className=\"icon\"><i className=\"icon-check\"></i></i>\n                                                        </span>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div className=\"todo-list-body\">\n                                                <ul id=\"todo-list\">\n                                                    {todoList.length > 0 ?\n                                                        todoList.map((todoData, index) =>\n                                                            <li className={\"task \" + (todoData.completed ? 'completed' : '')} key={index} >\n                                                                <div className=\"task-container\">\n                                                                    <h4 className=\"task-label\">{todoData.task}</h4>\n                                                                    <span className=\"task-action-btn\">\n                                                                        <span className=\"action-box large delete-btn\" title=\"Delete Task\" onClick={() => handleRemoveTodo(todoData.id)} >\n                                                                            <i className=\"icon\"><i className=\"icon-trash\"></i></i></span>\n                                                                        <span className=\"action-box large complete-btn\" title=\"Mark Complete\" onClick={() => handleMarkedTodo(index, todoData)} >\n                                                                            <i className=\"icon\"><i className=\"icon-check\"></i></i>\n                                                                        </span>\n                                                                    </span>\n                                                                </div>\n                                                            </li>\n                                                        ) : ''}\n                                                </ul>\n                                            </div>\n                                            <div className=\"todo-list-footer\">\n                                                <div className=\"add-task-btn-wrapper\"><span className=\"add-task-btn\">\n                                                    <button className=\"btn btn-primary\" onClick={openTaskWrapper} >\n                                                        <i className=\"icon-plus\"></i> Add new task</button></span></div>\n                                                <div className={\"new-task-wrapper\" + addTask}>\n                                                    <textarea\n                                                        className={\"ng-untouched ng-pristine ng-valid\" + border_danger}\n                                                        id=\"newtask\"\n                                                        placeholder=\"Enter new task here. . .\"\n                                                        defaultValue={task}\n                                                        onChange={onTaskChanged}\n                                                    >\n                                                    </textarea>\n                                                    <span className=\"btn btn-danger cancel-btn\" id=\"close-task-panel\" onClick={closeTaskWrapper}>Close</span>\n                                                    <span className=\"btn btn-success ml-3 add-new-task-btn\" id=\"add-task\" onClick={addNewTask}>Add Task</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"notification-popup hide\">\n                                        <p><span className=\"task\"></span><span className=\"notification-text\"></span></p>\n                                    </div>\n                                </div>\n                                {/* <!-- HTML Template for tasks--> */}\n                                <script id=\"task-template\" type=\"tect/template\">\n                                    <li className=\"task\">\n                                        <div className=\"task-container\">\n                                            <span className=\"task-action-btn\">\n                                                <span className=\"action-box large delete-btn\" title=\"Delete Task\">\n                                                    <i className=\"icon\"><i className=\"icon-trash\"></i></i>\n                                                </span>\n                                                <span className=\"action-box large complete-btn\" title=\"Mark Complete\">\n                                                    <i className=\"icon\"><i className=\"icon-check\"></i></i>\n                                                </span>\n                                            </span>\n                                        </div>\n                                    </li>\n                                </script>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default TodoFirebase;"]},"metadata":{},"sourceType":"module"}