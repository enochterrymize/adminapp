{"ast":null,"code":"import _slicedToArray from\"/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import useForm from'react-hook-form';var TooltipForm=function TooltipForm(){var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.errors;// initialise the hook\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),validateClass=_useState2[0],setValidateClass=_useState2[1];var onSubmit=function onSubmit(data){if(data!==''){alert('You submitted the form and stuff!');}else{errors.showMessages();}};return React.createElement(\"div\",null,React.createElement(\"form\",{className:\"needs-validation tooltip-validation \".concat(validateClass?'validateClass':''),noValidate:\"\",onSubmit:handleSubmit(onSubmit)},React.createElement(\"div\",{className:\"form-row\"},React.createElement(\"div\",{className:\"col-md-4 mb-3\"},React.createElement(\"label\",{htmlFor:\"validationTooltip01\"},\"First name\"),React.createElement(\"input\",{className:\"form-control\",id:\"validationTooltip01\",name:\"firstName\",type:\"text\",placeholder:\"First name\",ref:register({required:true})}),React.createElement(\"span\",null,errors.firstName&&'First name is required'),React.createElement(\"div\",{className:\"valid-feedback\"},\"Looks good!\")),React.createElement(\"div\",{className:\"col-md-4 mb-3\"},React.createElement(\"label\",{htmlFor:\"validationTooltip02\"},\"Last name\"),React.createElement(\"input\",{className:\"form-control\",id:\"validationTooltip02\",name:\"lastName\",type:\"text\",placeholder:\"Last name\",ref:register({required:true})}),React.createElement(\"span\",null,errors.lastName&&'Last name is required'),React.createElement(\"div\",{className:\"valid-feedback\"},\"Looks good!\")),React.createElement(\"div\",{className:\"col-md-4 mb-3\"},React.createElement(\"label\",{htmlFor:\"validationCustomUsername\"},\"Username\"),React.createElement(\"div\",{className:\"input-group\"},React.createElement(\"div\",{className:\"input-group-prepend\"},React.createElement(\"span\",{className:\"input-group-text\",id:\"validationTooltip03\"},\"@\")),React.createElement(\"input\",{className:\"form-control\",id:\"validationTooltip03\",name:\"userName\",type:\"text\",placeholder:\"Username\",\"aria-describedby\":\"inputGroupPrepend\",ref:register({required:true})}),React.createElement(\"span\",null,errors.lastName&&'User name is required'),React.createElement(\"div\",{className:\"invalid-feedback\"},\"Please choose a username.\")))),React.createElement(\"div\",{className:\"form-row\"},React.createElement(\"div\",{className:\"col-md-6 mb-3\"},React.createElement(\"label\",{htmlFor:\"validationTooltip04\"},\"City\"),React.createElement(\"input\",{className:\"form-control\",id:\"validationTooltip04\",name:\"city\",type:\"text\",placeholder:\"City\",ref:register({required:true})}),React.createElement(\"span\",null,errors.city&&'Please provide a valid city'),React.createElement(\"div\",{className:\"invalid-feedback\"},\"Please provide a valid city.\")),React.createElement(\"div\",{className:\"col-md-3 mb-3\"},React.createElement(\"label\",{htmlFor:\"validationTooltip05\"},\"State\"),React.createElement(\"input\",{className:\"form-control\",id:\"validationTooltip05\",name:\"state\",type:\"text\",placeholder:\"State\",ref:register({required:true})}),React.createElement(\"span\",null,errors.state&&'Please provide a valid state.'),React.createElement(\"div\",{className:\"invalid-feedback\"},\"Please provide a valid state.\")),React.createElement(\"div\",{className:\"col-md-3 mb-3\"},React.createElement(\"label\",{htmlFor:\"validationTooltip06\"},\"Zip\"),React.createElement(\"input\",{className:\"form-control\",id:\"validationTooltip06\",name:\"zip\",type:\"text\",placeholder:\"Zip\",ref:register({required:true})}),React.createElement(\"span\",null,errors.zip&&'Please provide a valid zip.'),React.createElement(\"div\",{className:\"invalid-feedback\"},\"Please provide a valid zip.\"))),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"div\",{className:\"form-check\"},React.createElement(\"div\",{className:\"checkbox p-0\"},React.createElement(\"input\",{className:\"form-check-input\",id:\"invalidCheck\",type:\"checkbox\"}),React.createElement(\"label\",{className:\"form-check-label\",htmlFor:\"invalidCheck\"},\"Agree to terms and conditions\")),React.createElement(\"div\",{className:\"invalid-feedback\"},\"You must agree before submitting.\"))),React.createElement(\"button\",{className:\"btn btn-primary\",type:\"submit\",onClick:function onClick(){return setValidateClass(!validateClass);}},\"Submit form\")));};export default TooltipForm;","map":{"version":3,"sources":["/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/src/components/forms/form-control/tooltipForm.js"],"names":["React","useState","useForm","TooltipForm","register","handleSubmit","errors","validateClass","setValidateClass","onSubmit","data","alert","showMessages","required","firstName","lastName","city","state","zip"],"mappings":"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","sourcesContent":["import React ,{useState} from 'react';\nimport useForm from 'react-hook-form'\n\nconst TooltipForm = () => {\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\n  const [validateClass , setValidateClass] = useState(false);\n  const onSubmit = data => {\n\n    if (data !== '') {\n      alert('You submitted the form and stuff!');\n    } else {\n      errors.showMessages();\n    }\n  };\n  return (\n    <div>\n      <form className={`needs-validation tooltip-validation ${validateClass ? 'validateClass' : ''}`} noValidate=\"\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-row\">\n          <div className=\"col-md-4 mb-3\">\n            <label htmlFor=\"validationTooltip01\">First name</label>\n            <input className=\"form-control\" id=\"validationTooltip01\" name=\"firstName\" type=\"text\" placeholder=\"First name\" ref={register({ required: true })} />\n            <span>{errors.firstName && 'First name is required'}</span>\n            <div className=\"valid-feedback\">Looks good!</div>\n          </div>\n          <div className=\"col-md-4 mb-3\">\n            <label htmlFor=\"validationTooltip02\">Last name</label>\n            <input className=\"form-control\" id=\"validationTooltip02\" name=\"lastName\" type=\"text\" placeholder=\"Last name\" ref={register({ required: true })} />\n            <span>{errors.lastName && 'Last name is required'}</span>\n            <div className=\"valid-feedback\">Looks good!</div>\n          </div>\n          <div className=\"col-md-4 mb-3\">\n            <label htmlFor=\"validationCustomUsername\">Username</label>\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\"><span className=\"input-group-text\" id=\"validationTooltip03\">@</span></div>\n              <input className=\"form-control\" id=\"validationTooltip03\" name=\"userName\" type=\"text\" placeholder=\"Username\" aria-describedby=\"inputGroupPrepend\" ref={register({ required: true })} />\n              <span>{errors.lastName && 'User name is required'}</span>\n              <div className=\"invalid-feedback\">Please choose a username.</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"form-row\">\n          <div className=\"col-md-6 mb-3\">\n            <label htmlFor=\"validationTooltip04\">City</label>\n            <input className=\"form-control\" id=\"validationTooltip04\" name=\"city\" type=\"text\" placeholder=\"City\" ref={register({ required: true })} />\n            <span>{errors.city && 'Please provide a valid city'}</span>\n            <div className=\"invalid-feedback\">Please provide a valid city.</div>\n          </div>\n          <div className=\"col-md-3 mb-3\">\n            <label htmlFor=\"validationTooltip05\">State</label>\n            <input className=\"form-control\" id=\"validationTooltip05\" name=\"state\" type=\"text\" placeholder=\"State\" ref={register({ required: true })} />\n            <span>{errors.state && 'Please provide a valid state.'}</span>\n            <div className=\"invalid-feedback\">Please provide a valid state.</div>\n          </div>\n          <div className=\"col-md-3 mb-3\">\n            <label htmlFor=\"validationTooltip06\">Zip</label>\n            <input className=\"form-control\" id=\"validationTooltip06\" name=\"zip\" type=\"text\" placeholder=\"Zip\" ref={register({ required: true })} />\n            <span>{errors.zip && 'Please provide a valid zip.'}</span>\n            <div className=\"invalid-feedback\">Please provide a valid zip.</div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check\">\n            <div className=\"checkbox p-0\">\n              <input className=\"form-check-input\" id=\"invalidCheck\" type=\"checkbox\" />\n              <label className=\"form-check-label\" htmlFor=\"invalidCheck\">Agree to terms and conditions</label>\n            </div>\n            <div className=\"invalid-feedback\">You must agree before submitting.</div>\n          </div>\n        </div>\n        <button className=\"btn btn-primary\" type=\"submit\" onClick={() => setValidateClass(!validateClass)}>Submit form</button>\n      </form>\n    </div>\n  );\n};\n\nexport default TooltipForm;"]},"metadata":{},"sourceType":"module"}