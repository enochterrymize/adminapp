{"ast":null,"code":"import React,{Fragment}from'react';import Breadcrumb from'../common/breadcrumb';import ChartistGraph from'react-chartist';import{chart1,chart2Data,chart9Data,chart11Data,chart7Data,chart7Options,chart2Option,chart3Data,chart3Options,chart6Data,chart6Options,chart4Data,chart4Options,chart5Data,chart5Options,chart10Data,chart10Options,chart11Options,chart12Data,chart12Options}from'../../charts-data/chartistData';var ChartistComponent=function ChartistComponent(){return React.createElement(Fragment,null,React.createElement(Breadcrumb,{title:\"Chartist\",parent:\"Chart\"}),React.createElement(\"div\",{className:\"container-fluid\"},React.createElement(\"div\",{className:\"row chartist-page\"},React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"ADVANCED SMIL ANIMATIONS\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(ChartistGraph,{key:\"1\",className:\"ct-chart-line flot-chart-container\",data:{labels:['1','2','3','4','5','6','7','8','9','10','11','12'],series:[[12,9,7,8,5,4,6,2,3,3,4,6],[4,5,3,7,3,5,5,3,4,4,5,5],[5,3,4,5,6,3,3,4,5,6,3,4],[3,4,5,6,7,6,4,5,6,7,6,3]]},type:'Line',listener:{\"draw\":function draw(data){if(data.type==='line'||data.type==='area'){data.element.animate({d:{begin:2000*data.index,dur:2000,from:data.path.clone().scale(1,0).translate(0,data.chartRect.height()).stringify(),to:data.path.clone().stringify()}});}}},options:chart1})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"SVG PATH ANIMATIONS\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(ChartistGraph,{key:\"1\",className:\"ct-chart-line flot-chart-container\",data:{labels:['Mon','Tue','Wed','Thu','Fri','Sat'],series:[[1,5,2,5,4,3],[2,3,4,8,1,2],[5,4,3,2,1,0.5]]},type:'Line',listener:{\"draw\":function draw(data){if(data.type==='line'||data.type==='area'){data.element.animate({d:{begin:2000*data.index,dur:2000,from:data.path.clone().scale(1,0).translate(0,data.chartRect.height()).stringify(),to:data.path.clone().stringify()}});}}},options:chart1})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"SVG PATH ANIMATIONS\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(ChartistGraph,{data:chart2Data,options:chart2Option,type:'Pie',className:\"flot-chart-container\"})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"BI-POLAR LINE CHART WITH AREA ONLY\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(ChartistGraph,{data:chart3Data,options:chart3Options,type:'Line',className:\"flot-chart-container\"})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\"LINE CHART WITH AREA\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(ChartistGraph,{data:chart4Data,options:chart4Options,type:'Line',className:\"flot-chart-container\"})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\" Bi-polar bar chart\")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(ChartistGraph,{data:chart5Data,options:chart5Options,type:'Bar',className:\"flot-chart-container\"})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\" Stacked bar chart \")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(ChartistGraph,{data:chart6Data,options:chart6Options,type:'Bar',className:\"flot-chart-container\"})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\" Horizontal bar chart \")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(ChartistGraph,{data:chart7Data,options:chart7Options,type:'Bar',className:\"flot-chart-container\"})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\" Extreme responsive configuration \")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(ChartistGraph,{data:chart9Data.data,options:chart9Data.options,responsiveOptions:chart9Data.responsiveOptions,type:'Bar',className:\"flot-chart-container\"})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\" Simple line chart \")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(ChartistGraph,{data:chart10Data,options:chart10Options,type:'Line',className:\"flot-chart-container\"})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\" Holes in data \")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(ChartistGraph,{data:chart11Data,options:chart11Options,type:'Line',className:\"flot-chart-container\"})))),React.createElement(\"div\",{className:\"col-xl-6\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"card-header\"},React.createElement(\"h5\",null,\" Filled holes in data \")),React.createElement(\"div\",{className:\"card-body\"},React.createElement(ChartistGraph,{data:chart12Data,options:chart12Options,type:'Line',className:\"flot-chart-container\"})))))));};export default ChartistComponent;","map":{"version":3,"sources":["/Volumes/Terry HD/workspace/projects_reactjs/admin/endless-app/src/components/charts/chartistComponent.js"],"names":["React","Fragment","Breadcrumb","ChartistGraph","chart1","chart2Data","chart9Data","chart11Data","chart7Data","chart7Options","chart2Option","chart3Data","chart3Options","chart6Data","chart6Options","chart4Data","chart4Options","chart5Data","chart5Options","chart10Data","chart10Options","chart11Options","chart12Data","chart12Options","ChartistComponent","labels","series","data","type","element","animate","d","begin","index","dur","from","path","clone","scale","translate","chartRect","height","stringify","to","options","responsiveOptions"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport Breadcrumb from '../common/breadcrumb';\nimport ChartistGraph from 'react-chartist';\nimport {chart1 ,chart2Data,chart9Data,chart11Data, chart7Data,chart7Options, chart2Option ,chart3Data,chart3Options,chart6Data,chart6Options ,chart4Data ,chart4Options ,chart5Data ,chart5Options, chart10Data, chart10Options, chart11Options, chart12Data, chart12Options} from '../../charts-data/chartistData';\n\nconst ChartistComponent = () => {\n   \n    return (\n        <Fragment>\n            <Breadcrumb title=\"Chartist\" parent=\"Chart\" />\n            <div className=\"container-fluid\">\n                <div className=\"row chartist-page\">\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>ADVANCED SMIL ANIMATIONS</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <ChartistGraph key=\"1\" className=\"ct-chart-line flot-chart-container\" data={{\n                                    labels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\n                                    series: [[12, 9, 7, 8, 5, 4, 6, 2, 3, 3, 4, 6],\n                                    [4, 5, 3, 7, 3, 5, 5, 3, 4, 4, 5, 5],\n                                    [5, 3, 4, 5, 6, 3, 3, 4, 5, 6, 3, 4],\n                                    [3, 4, 5, 6, 7, 6, 4, 5, 6, 7, 6, 3]]\n                                }} type={'Line'} listener={{\n                                    \"draw\": function (data) {\n                                        if (data.type === 'line' || data.type === 'area') {\n                                            data.element.animate({\n                                                d: {\n                                                    begin: 2000 * data.index,\n                                                    dur: 2000,\n                                                    from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n                                                    to: data.path.clone().stringify(),\n                                                }\n                                            });\n                                        }\n                                    }\n                                }} options={chart1}  />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>SVG PATH ANIMATIONS</h5>\n                            </div>\n                            <div className=\"card-body\">\n                            <ChartistGraph key=\"1\" className=\"ct-chart-line flot-chart-container\" data={{\n                                    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n                                    series: [ [1, 5, 2, 5, 4, 3],\n                                    [2, 3, 4, 8, 1, 2],\n                                    [5, 4, 3, 2, 1, 0.5]]\n                                }} type={'Line'} listener={{\n                                    \"draw\": function (data) {\n                                        if (data.type === 'line' || data.type === 'area') {\n                                            data.element.animate({\n                                                d: {\n                                                    begin: 2000 * data.index,\n                                                    dur: 2000,\n                                                    from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n                                                    to: data.path.clone().stringify(),\n                                                }\n                                            });\n                                        }\n                                    }\n                                }} options={chart1} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>SVG PATH ANIMATIONS</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <ChartistGraph data={chart2Data} options={chart2Option} type={'Pie'} className=\"flot-chart-container\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>BI-POLAR LINE CHART WITH AREA ONLY</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <ChartistGraph data={chart3Data} options={chart3Options} type={'Line'} className=\"flot-chart-container\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>LINE CHART WITH AREA</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <ChartistGraph data={chart4Data} options={chart4Options} type={'Line'} className=\"flot-chart-container\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5> Bi-polar bar chart</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <ChartistGraph data={chart5Data} options={chart5Options} type={'Bar'} className=\"flot-chart-container\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5> Stacked bar chart </h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <ChartistGraph data={chart6Data} options={chart6Options} type={'Bar'} className=\"flot-chart-container\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5> Horizontal bar chart </h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <ChartistGraph data={chart7Data} options={chart7Options} type={'Bar'} className=\"flot-chart-container\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5> Extreme responsive configuration </h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <ChartistGraph data={chart9Data.data} options={chart9Data.options} responsiveOptions={chart9Data.responsiveOptions} type={'Bar'} className=\"flot-chart-container\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5> Simple line chart </h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <ChartistGraph data={chart10Data} options={chart10Options} type={'Line'} className=\"flot-chart-container\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5> Holes in data </h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <ChartistGraph data={chart11Data} options={chart11Options} type={'Line'} className=\"flot-chart-container\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5> Filled holes in data </h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <ChartistGraph data={chart12Data} options={chart12Options} type={'Line'} className=\"flot-chart-container\"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default ChartistComponent;"]},"metadata":{},"sourceType":"module"}